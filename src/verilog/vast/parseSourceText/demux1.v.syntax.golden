(source_text (one_or_more_description (description (module_declaration (module_keyword (keyword_module module)) (identifier (single_identifier (simple_identifier decode1))) (zero_or_one_list_of_ports (list_of_ports (port (port_expression (port_reference (identifier (single_identifier (simple_identifier in1)))))) (zero_or_more_comma_port (port (port_expression (port_reference (identifier (single_identifier (simple_identifier sel)))))) (port (port_expression (port_reference (identifier (single_identifier (simple_identifier out1))))))))) (zero_or_more_module_item (module_item (module_item_declaration (input_declaration (keyword_input input) (zero_or_one_range (range (constant_expression (constant_primary (number (unsigned_number 1)))) (constant_expression (constant_primary (number (unsigned_number 0)))))) (list_of_port_identifiers (identifier (single_identifier (simple_identifier in1))) (zero_or_more_comma_identifier))))) (module_item (module_item_declaration (input_declaration (keyword_input \ninput) (zero_or_one_range (range (constant_expression (constant_primary (number (unsigned_number 2)))) (constant_expression (constant_primary (number (unsigned_number 0)))))) (list_of_port_identifiers (identifier (single_identifier (simple_identifier sel))) (zero_or_more_comma_identifier))))) (module_item (module_item_declaration (output_declaration (keyword_output \noutput) (zero_or_one_range (range (constant_expression (constant_primary (number (unsigned_number 13)))) (constant_expression (constant_primary (number (unsigned_number 0)))))) (list_of_port_identifiers (identifier (single_identifier (simple_identifier out1))) (zero_or_more_comma_identifier))))) (module_item (module_item_declaration (reg_declaration (keyword_reg reg) (zero_or_one_range (range (constant_expression (constant_primary (number (unsigned_number 15)))) (constant_expression (constant_primary (number (unsigned_number 0)))))) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier out1))) (zero_or_more_register_name_range)) (zero_or_more_comma_register_name))))) (module_item (module_item_declaration (integer_declaration (keyword_integer integer) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier i))) (zero_or_more_register_name_range)) (zero_or_more_comma_register_name))))) (module_item (always_construct (keyword_always always) (statement (procedural_timing_control_statement (delay_or_event_control (event_control (at_event_expression (event_expression (event_or_event (event_expression (expression (primary (identifier (single_identifier (simple_identifier in1)))))) (keyword_or or) (event_expression (expression (primary (identifier (single_identifier (simple_identifier sel))))))))))) (statement_or_null (statement (seq_block (keyword_begin begin\n) (zero_or_more_statement (statement (blocking_assignment_semicolon (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier out2)))) (expression (primary (number (heximal_number 14'h0))))))) (statement (loop_statement (keyword_for for) (reg_assignment (reg_lvalue (identifier (single_identifier (simple_identifier i)))) (expression (primary (number (unsigned_number 0))))) (expression (binary_expression (binary_expression_leq (expression (primary (identifier (single_identifier (simple_identifier i))))) (expression (primary (number (unsigned_number 7))))))) (reg_assignment (reg_lvalue (identifier (single_identifier (simple_identifier i)))) (expression (binary_expression (binary_expression_plus (expression (primary (identifier (single_identifier (simple_identifier i))))) (expression (primary (number (unsigned_number 1)))))))) (statement (conditional_statement (keyword_if if) (expression (binary_expression (binary_expression_eq (expression (primary (identifier (single_identifier (simple_identifier i))))) (expression (primary (identifier (single_identifier (simple_identifier sel)))))))) (statement_or_null (statement (seq_block (keyword_begin begin\n) (zero_or_more_statement (statement (blocking_assignment_semicolon (blocking_assignment (reg_lvalue (select_identifier (identifier (single_identifier (simple_identifier out1))) (one_or_more_select (select (bit_select (expression (primary (identifier (single_identifier (simple_identifier i)))))))))) (expression (primary (select_identifier (identifier (single_identifier (simple_identifier in1))) (one_or_more_select (select (bit_select (expression (primary (number (unsigned_number 0))))))))))))) (statement (blocking_assignment_semicolon (blocking_assignment (reg_lvalue (select_identifier (identifier (single_identifier (simple_identifier out1))) (one_or_more_select (select (bit_select (expression (binary_expression (binary_expression_plus (expression (primary (identifier (single_identifier (simple_identifier i))))) (expression (primary (number (unsigned_number 1)))))))))))) (expression (primary (select_identifier (identifier (single_identifier (simple_identifier in1))) (one_or_more_select (select (bit_select (expression (primary (number (unsigned_number 1)))))))))))))) (keyword_end end\n)))) (zero_or_one_else_statement_or_null)))))) (keyword_end end\n))))))))) (keyword_endmodule \nendmodule\n)))))
