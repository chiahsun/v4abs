(source_text (one_or_more_description (description (module_declaration (module_keyword (keyword_module module)) (identifier (single_identifier (simple_identifier arbiter))) (zero_or_one_list_of_ports (list_of_ports (port (port_expression (port_reference (identifier (single_identifier (simple_identifier clock)))))) (zero_or_more_comma_port (port (port_expression (port_reference (identifier (single_identifier (simple_identifier reset)))))) (port (port_expression (port_reference (identifier (single_identifier (simple_identifier round_or_priority)))))) (port (port_expression (port_reference (identifier (single_identifier (simple_identifier request)))))) (port (port_expression (port_reference (identifier (single_identifier (simple_identifier priority)))))) (port (port_expression (port_reference (identifier (single_identifier (simple_identifier grant))))))))) (zero_or_more_module_item (module_item (module_item_declaration (integer_declaration (keyword_integer integer) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier i))) (zero_or_more_register_name_range)) (zero_or_more_comma_register_name (register_name (identifier (single_identifier (simple_identifier k))) (zero_or_more_register_name_range))))))) (module_item (module_item_declaration (parameter_declaration (keyword_parameter parameter) (list_of_param_assignments (param_assignment (identifier (single_identifier (simple_identifier NUMUNITS))) (expression (primary (number (unsigned_number 9))))) (zero_or_more_comma_param_assignment))))) (module_item (module_item_declaration (parameter_declaration (keyword_parameter \nparameter) (list_of_param_assignments (param_assignment (identifier (single_identifier (simple_identifier ADDRESSWIDTH))) (expression (primary (number (unsigned_number 3))))) (zero_or_more_comma_param_assignment))))) (module_item (module_item_declaration (input_declaration (keyword_input input) (zero_or_one_range) (list_of_port_identifiers (identifier (single_identifier (simple_identifier clock))) (zero_or_more_comma_identifier))))) (module_item (module_item_declaration (input_declaration (keyword_input \ninput) (zero_or_one_range) (list_of_port_identifiers (identifier (single_identifier (simple_identifier reset))) (zero_or_more_comma_identifier))))) (module_item (module_item_declaration (input_declaration (keyword_input \ninput) (zero_or_one_range) (list_of_port_identifiers (identifier (single_identifier (simple_identifier round_or_priority))) (zero_or_more_comma_identifier))))) (module_item (module_item_declaration (input_declaration (keyword_input \ninput) (zero_or_one_range (range (constant_expression (binary_constant_expression (binary_constant_expression_minus (constant_expression (constant_primary (identifier (single_identifier (simple_identifier NUMUNITS))))) (constant_expression (constant_primary (number (unsigned_number 1))))))) (constant_expression (constant_primary (number (unsigned_number 0)))))) (list_of_port_identifiers (identifier (single_identifier (simple_identifier request))) (zero_or_more_comma_identifier))))) (module_item (module_item_declaration (input_declaration (keyword_input \ninput) (zero_or_one_range (range (constant_expression (binary_constant_expression (binary_constant_expression_minus (constant_expression (binary_constant_expression (binary_constant_expression_multiply (constant_expression (constant_primary (identifier (single_identifier (simple_identifier ADDRESSWIDTH))))) (constant_expression (constant_primary (identifier (single_identifier (simple_identifier NUMUNITS)))))))) (constant_expression (constant_primary (number (unsigned_number 1))))))) (constant_expression (constant_primary (number (unsigned_number 0)))))) (list_of_port_identifiers (identifier (single_identifier (simple_identifier priority))) (zero_or_more_comma_identifier))))) (module_item (module_item_declaration (output_declaration (keyword_output output) (zero_or_one_range (range (constant_expression (binary_constant_expression (binary_constant_expression_minus (constant_expression (constant_primary (identifier (single_identifier (simple_identifier NUMUNITS))))) (constant_expression (constant_primary (number (unsigned_number 1))))))) (constant_expression (constant_primary (number (unsigned_number 0)))))) (list_of_port_identifiers (identifier (single_identifier (simple_identifier grant))) (zero_or_more_comma_identifier))))) (module_item (module_item_declaration (reg_declaration (keyword_reg reg) (zero_or_one_range (range (constant_expression (binary_constant_expression (binary_constant_expression_minus (constant_expression (constant_primary (identifier (single_identifier (simple_identifier ADDRESSWIDTH))))) (constant_expression (constant_primary (number (unsigned_number 1))))))) (constant_expression (constant_primary (number (unsigned_number 0)))))) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier prio))) (zero_or_more_register_name_range)) (zero_or_more_comma_register_name))))) (module_item (module_item_declaration (reg_declaration (keyword_reg \nreg) (zero_or_one_range (range (constant_expression (binary_constant_expression (binary_constant_expression_minus (constant_expression (constant_primary (identifier (single_identifier (simple_identifier ADDRESSWIDTH))))) (constant_expression (constant_primary (number (unsigned_number 1))))))) (constant_expression (constant_primary (number (unsigned_number 0)))))) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier tmp_prio))) (zero_or_more_register_name_range)) (zero_or_more_comma_register_name))))) (module_item (always_construct (keyword_always always) (statement (procedural_timing_control_statement (delay_or_event_control (event_control (at_event_expression (event_expression (expression (primary (identifier (single_identifier (simple_identifier priority))))))))) (statement_or_null (statement (seq_block (keyword_begin begin\n) (zero_or_more_statement (statement (loop_statement (keyword_for for) (reg_assignment (reg_lvalue (identifier (single_identifier (simple_identifier i)))) (expression (primary (number (unsigned_number 0))))) (expression (binary_expression (binary_expression_lt (expression (primary (identifier (single_identifier (simple_identifier i))))) (expression (primary (identifier (single_identifier (simple_identifier NUMUNITS)))))))) (reg_assignment (reg_lvalue (identifier (single_identifier (simple_identifier i)))) (expression (binary_expression (binary_expression_plus (expression (primary (identifier (single_identifier (simple_identifier i))))) (expression (primary (number (unsigned_number 1)))))))) (statement (seq_block (keyword_begin begin\n) (zero_or_more_statement (statement (loop_statement (keyword_for for) (reg_assignment (reg_lvalue (identifier (single_identifier (simple_identifier k)))) (expression (primary (number (unsigned_number 0))))) (expression (binary_expression (binary_expression_lt (expression (primary (identifier (single_identifier (simple_identifier k))))) (expression (primary (identifier (single_identifier (simple_identifier ADDRESSWIDTH)))))))) (reg_assignment (reg_lvalue (identifier (single_identifier (simple_identifier k)))) (expression (binary_expression (binary_expression_plus (expression (primary (identifier (single_identifier (simple_identifier k))))) (expression (primary (number (unsigned_number 1)))))))) (statement (blocking_assignment_semicolon (blocking_assignment (reg_lvalue (select_identifier (identifier (single_identifier (simple_identifier tmp_prio))) (one_or_more_select (select (bit_select (expression (primary (identifier (single_identifier (simple_identifier k)))))))))) (expression (primary (select_identifier (identifier (single_identifier (simple_identifier priority))) (one_or_more_select (select (bit_select (expression (binary_expression (binary_expression_plus (expression (binary_expression (binary_expression_multiply (expression (primary (identifier (single_identifier (simple_identifier k))))) (expression (primary (identifier (single_identifier (simple_identifier ADDRESSWIDTH)))))))) (expression (primary (identifier (single_identifier (simple_identifier k))))))))))))))))))) (statement (blocking_assignment_semicolon (blocking_assignment (reg_lvalue (select_identifier (identifier (single_identifier (simple_identifier prio))) (one_or_more_select (select (bit_select (expression (primary (identifier (single_identifier (simple_identifier i)))))))))) (expression (primary (identifier (single_identifier (simple_identifier tmp_prio))))))))) (keyword_end end\n)))))) (keyword_end end\n)))))))) (module_item (module_item_declaration (reg_declaration (keyword_reg \nreg) (zero_or_one_range (range (constant_expression (binary_constant_expression (binary_constant_expression_minus (constant_expression (constant_primary (identifier (single_identifier (simple_identifier NUMUNITS))))) (constant_expression (constant_primary (number (unsigned_number 1))))))) (constant_expression (constant_primary (number (unsigned_number 0)))))) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier grant))) (zero_or_more_register_name_range)) (zero_or_more_comma_register_name))))) (module_item (module_item_declaration (reg_declaration (keyword_reg \nreg) (zero_or_one_range (range (constant_expression (binary_constant_expression (binary_constant_expression_minus (constant_expression (constant_primary (identifier (single_identifier (simple_identifier NUMUNITS))))) (constant_expression (constant_primary (number (unsigned_number 1))))))) (constant_expression (constant_primary (number (unsigned_number 0)))))) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier grantD))) (zero_or_more_register_name_range)) (zero_or_more_comma_register_name))))) (module_item (module_item_declaration (reg_declaration (keyword_reg reg) (zero_or_one_range (range (constant_expression (binary_constant_expression (binary_constant_expression_minus (constant_expression (constant_primary (identifier (single_identifier (simple_identifier ADDRESSWIDTH))))) (constant_expression (constant_primary (number (unsigned_number 1))))))) (constant_expression (constant_primary (number (unsigned_number 0)))))) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier next))) (zero_or_more_register_name_range)) (zero_or_more_comma_register_name))))) (module_item (module_item_declaration (reg_declaration (keyword_reg \nreg) (zero_or_one_range (range (constant_expression (binary_constant_expression (binary_constant_expression_minus (constant_expression (constant_primary (identifier (single_identifier (simple_identifier ADDRESSWIDTH))))) (constant_expression (constant_primary (number (unsigned_number 1))))))) (constant_expression (constant_primary (number (unsigned_number 0)))))) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier nextD))) (zero_or_more_register_name_range)) (zero_or_more_comma_register_name))))) (module_item (module_item_declaration (reg_declaration (keyword_reg reg) (zero_or_one_range (range (constant_expression (binary_constant_expression (binary_constant_expression_minus (constant_expression (constant_primary (identifier (single_identifier (simple_identifier ADDRESSWIDTH))))) (constant_expression (constant_primary (number (unsigned_number 1))))))) (constant_expression (constant_primary (number (unsigned_number 0)))))) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier scan))) (zero_or_more_register_name_range)) (zero_or_more_comma_register_name))))) (module_item (module_item_declaration (reg_declaration (keyword_reg reg) (zero_or_one_range (range (constant_expression (binary_constant_expression (binary_constant_expression_minus (constant_expression (constant_primary (identifier (single_identifier (simple_identifier NUMUNITS))))) (constant_expression (constant_primary (number (unsigned_number 2))))))) (constant_expression (constant_primary (number (unsigned_number 0)))))) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier found))) (zero_or_more_register_name_range)) (zero_or_more_comma_register_name))))) (module_item (module_item_declaration (reg_declaration (keyword_reg \nreg) (zero_or_one_range (range (constant_expression (binary_constant_expression (binary_constant_expression_minus (constant_expression (constant_primary (identifier (single_identifier (simple_identifier ADDRESSWIDTH))))) (constant_expression (constant_primary (number (unsigned_number 1))))))) (constant_expression (constant_primary (number (unsigned_number 0)))))) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier selectPrio))) (zero_or_more_register_name_range)) (zero_or_more_comma_register_name))))) (module_item (module_item_declaration (reg_declaration (keyword_reg reg) (zero_or_one_range (range (constant_expression (binary_constant_expression (binary_constant_expression_minus (constant_expression (constant_primary (identifier (single_identifier (simple_identifier ADDRESSWIDTH))))) (constant_expression (constant_primary (number (unsigned_number 1))))))) (constant_expression (constant_primary (number (unsigned_number 0)))))) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier min))) (zero_or_more_register_name_range)) (zero_or_more_comma_register_name))))) (module_item (module_item_declaration (reg_declaration (keyword_reg reg) (zero_or_one_range (range (constant_expression (binary_constant_expression (binary_constant_expression_minus (constant_expression (constant_primary (identifier (single_identifier (simple_identifier NUMUNITS))))) (constant_expression (constant_primary (number (unsigned_number 1))))))) (constant_expression (constant_primary (number (unsigned_number 0)))))) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier minPrio))) (zero_or_more_register_name_range)) (zero_or_more_comma_register_name))))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire wire)) (zero_or_one_range (range (constant_expression (binary_constant_expression (binary_constant_expression_minus (constant_expression (constant_primary (identifier (single_identifier (simple_identifier NUMUNITS))))) (constant_expression (constant_primary (number (unsigned_number 1))))))) (constant_expression (constant_primary (number (unsigned_number 0)))))) (list_of_net_identifier (identifier (single_identifier (simple_identifier prioRequest))) (zero_or_more_comma_identifier))))) (module_item (module_item_declaration (reg_declaration (keyword_reg reg) (zero_or_one_range (range (constant_expression (binary_constant_expression (binary_constant_expression_minus (constant_expression (constant_primary (identifier (single_identifier (simple_identifier NUMUNITS))))) (constant_expression (constant_primary (number (unsigned_number 1))))))) (constant_expression (constant_primary (number (unsigned_number 0)))))) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier finalRequest))) (zero_or_more_register_name_range)) (zero_or_more_comma_register_name))))) (module_item (always_construct (keyword_always always) (statement (procedural_timing_control_statement (delay_or_event_control (event_control (at_event_expression (event_expression (posedge_expression (keyword_posedge posedge) (expression (primary (identifier (single_identifier (simple_identifier clock)))))))))) (statement_or_null (statement (seq_block (keyword_begin begin\n) (zero_or_more_statement (statement (conditional_statement (keyword_if if) (expression (unary_expression (unary_operator (unary_operator_not)) (primary (identifier (single_identifier (simple_identifier reset)))))) (statement_or_null (statement (non_blocking_assignment_semicolon (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier grant)))) (expression (primary (number (unsigned_number 0)))))))) (zero_or_one_else_statement_or_null (else_statement_or_null (keyword_else else) (statement_or_null (statement (non_blocking_assignment_semicolon (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier grant)))) (expression (primary (identifier (single_identifier (simple_identifier grantD)))))))))))))) (keyword_end \nend\n)))))))) (module_item (always_construct (keyword_always \nalways) (statement (procedural_timing_control_statement (delay_or_event_control (event_control (at_event_expression (event_expression (posedge_expression (keyword_posedge posedge) (expression (primary (identifier (single_identifier (simple_identifier clock)))))))))) (statement_or_null (statement (seq_block (keyword_begin begin\n) (zero_or_more_statement (statement (conditional_statement (keyword_if if) (expression (unary_expression (unary_operator (unary_operator_not)) (primary (identifier (single_identifier (simple_identifier reset)))))) (statement_or_null (statement (non_blocking_assignment_semicolon (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next)))) (expression (primary (number (unsigned_number 0)))))))) (zero_or_one_else_statement_or_null (else_statement_or_null (keyword_else else) (statement_or_null (statement (non_blocking_assignment_semicolon (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next)))) (expression (primary (identifier (single_identifier (simple_identifier nextD)))))))))))))) (keyword_end \nend\n)))))))) (module_item (always_construct (keyword_always \nalways) (statement (procedural_timing_control_statement (delay_or_event_control (event_control (at_asterisk))) (statement_or_null (statement (seq_block (keyword_begin begin\n) (zero_or_more_statement (statement (loop_statement (keyword_for for) (reg_assignment (reg_lvalue (identifier (single_identifier (simple_identifier i)))) (expression (primary (number (unsigned_number 0))))) (expression (binary_expression (binary_expression_lt (expression (primary (identifier (single_identifier (simple_identifier i))))) (expression (primary (identifier (single_identifier (simple_identifier NUMUNITS)))))))) (reg_assignment (reg_lvalue (identifier (single_identifier (simple_identifier i)))) (expression (binary_expression (binary_expression_plus (expression (primary (identifier (single_identifier (simple_identifier i))))) (expression (primary (number (unsigned_number 1)))))))) (statement (blocking_assignment_semicolon (blocking_assignment (reg_lvalue (select_identifier (identifier (single_identifier (simple_identifier selectPrio))) (one_or_more_select (select (bit_select (expression (primary (identifier (single_identifier (simple_identifier i)))))))))) (expression (ternary_expression (expression (primary (select_identifier (identifier (single_identifier (simple_identifier request))) (one_or_more_select (select (bit_select (expression (primary (identifier (single_identifier (simple_identifier i))))))))))) (expression (primary (select_identifier (identifier (single_identifier (simple_identifier prio))) (one_or_more_select (select (bit_select (expression (primary (identifier (single_identifier (simple_identifier i))))))))))) (expression (binary_expression (binary_expression_minus (expression (primary (identifier (single_identifier (simple_identifier NUMUNITS))))) (expression (primary (number (unsigned_number 1))))))))))))))) (keyword_end \nend\n)))))))) (module_item (always_construct (keyword_always \nalways) (statement (procedural_timing_control_statement (delay_or_event_control (event_control (at_asterisk))) (statement_or_null (statement (seq_block (keyword_begin begin\n) (zero_or_more_statement (statement (loop_statement (keyword_for for) (reg_assignment (reg_lvalue (identifier (single_identifier (simple_identifier i)))) (expression (primary (number (unsigned_number 0))))) (expression (binary_expression (binary_expression_lt (expression (primary (identifier (single_identifier (simple_identifier i))))) (expression (primary (identifier (single_identifier (simple_identifier NUMUNITS)))))))) (reg_assignment (reg_lvalue (identifier (single_identifier (simple_identifier i)))) (expression (binary_expression (binary_expression_plus (expression (primary (identifier (single_identifier (simple_identifier i))))) (expression (primary (number (unsigned_number 1)))))))) (statement (blocking_assignment_semicolon (blocking_assignment (reg_lvalue (select_identifier (identifier (single_identifier (simple_identifier finalRequest))) (one_or_more_select (select (bit_select (expression (primary (identifier (single_identifier (simple_identifier i)))))))))) (expression (ternary_expression (expression (primary (identifier (single_identifier (simple_identifier round_or_priority))))) (expression (primary (select_identifier (identifier (single_identifier (simple_identifier prioRequest))) (one_or_more_select (select (bit_select (expression (primary (identifier (single_identifier (simple_identifier i))))))))))) (expression (primary (select_identifier (identifier (single_identifier (simple_identifier request))) (one_or_more_select (select (bit_select (expression (primary (identifier (single_identifier (simple_identifier i))))))))))))))))))) (keyword_end \nend\n)))))))) (module_item (always_construct (keyword_always \nalways) (statement (procedural_timing_control_statement (delay_or_event_control (event_control (at_asterisk))) (statement_or_null (statement (seq_block (keyword_begin begin\n) (zero_or_more_statement (statement (blocking_assignment_semicolon (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier min)))) (expression (primary (select_identifier (identifier (single_identifier (simple_identifier selectPrio))) (one_or_more_select (select (bit_select (expression (primary (number (unsigned_number 0))))))))))))) (statement (loop_statement (keyword_for for) (reg_assignment (reg_lvalue (identifier (single_identifier (simple_identifier i)))) (expression (primary (number (unsigned_number 1))))) (expression (binary_expression (binary_expression_lt (expression (primary (identifier (single_identifier (simple_identifier i))))) (expression (primary (identifier (single_identifier (simple_identifier NUMUNITS)))))))) (reg_assignment (reg_lvalue (identifier (single_identifier (simple_identifier i)))) (expression (binary_expression (binary_expression_plus (expression (primary (identifier (single_identifier (simple_identifier i))))) (expression (primary (number (unsigned_number 1)))))))) (statement (conditional_statement (keyword_if if) (expression (binary_expression (binary_expression_lt (expression (primary (select_identifier (identifier (single_identifier (simple_identifier selectPrio))) (one_or_more_select (select (bit_select (expression (primary (identifier (single_identifier (simple_identifier i))))))))))) (expression (primary (identifier (single_identifier (simple_identifier min)))))))) (statement_or_null (statement (blocking_assignment_semicolon (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier min)))) (expression (primary (select_identifier (identifier (single_identifier (simple_identifier selectPrio))) (one_or_more_select (select (bit_select (expression (primary (identifier (single_identifier (simple_identifier i))))))))))))))) (zero_or_one_else_statement_or_null)))))) (keyword_end \nend\n)))))))) (module_item (always_construct (keyword_always \nalways) (statement (procedural_timing_control_statement (delay_or_event_control (event_control (at_asterisk))) (statement_or_null (statement (seq_block (keyword_begin begin\n) (zero_or_more_statement (statement (loop_statement (keyword_for for) (reg_assignment (reg_lvalue (identifier (single_identifier (simple_identifier i)))) (expression (primary (number (unsigned_number 0))))) (expression (binary_expression (binary_expression_lt (expression (primary (identifier (single_identifier (simple_identifier i))))) (expression (primary (identifier (single_identifier (simple_identifier NUMUNITS)))))))) (reg_assignment (reg_lvalue (identifier (single_identifier (simple_identifier i)))) (expression (binary_expression (binary_expression_plus (expression (primary (identifier (single_identifier (simple_identifier i))))) (expression (primary (number (unsigned_number 1)))))))) (statement (blocking_assignment_semicolon (blocking_assignment (reg_lvalue (select_identifier (identifier (single_identifier (simple_identifier minPrio))) (one_or_more_select (select (bit_select (expression (primary (identifier (single_identifier (simple_identifier i)))))))))) (expression (ternary_expression (expression (braced_expression (expression (binary_expression (binary_expression_eq (expression (primary (select_identifier (identifier (single_identifier (simple_identifier prio))) (one_or_more_select (select (bit_select (expression (primary (identifier (single_identifier (simple_identifier i))))))))))) (expression (primary (identifier (single_identifier (simple_identifier min)))))))))) (expression (primary (number (unsigned_number 1)))) (expression (primary (number (unsigned_number 0)))))))))))) (keyword_end \nend\n)))))))) (module_item (always_construct (keyword_always \nalways) (statement (procedural_timing_control_statement (delay_or_event_control (event_control (at_event_expression (event_expression (expression (primary (identifier (single_identifier (simple_identifier next))))))))) (statement_or_null (statement (seq_block (keyword_begin begin\n) (zero_or_more_statement (statement (loop_statement (keyword_for for) (reg_assignment (reg_lvalue (identifier (single_identifier (simple_identifier i)))) (expression (primary (number (unsigned_number 0))))) (expression (binary_expression (binary_expression_lt (expression (primary (identifier (single_identifier (simple_identifier i))))) (expression (primary (identifier (single_identifier (simple_identifier NUMUNITS)))))))) (reg_assignment (reg_lvalue (identifier (single_identifier (simple_identifier i)))) (expression (binary_expression (binary_expression_plus (expression (primary (identifier (single_identifier (simple_identifier i))))) (expression (primary (number (unsigned_number 1)))))))) (statement (blocking_assignment_semicolon (blocking_assignment (reg_lvalue (select_identifier (identifier (single_identifier (simple_identifier scan))) (one_or_more_select (select (bit_select (expression (primary (identifier (single_identifier (simple_identifier i)))))))))) (expression (ternary_expression (expression (braced_expression (expression (binary_expression (binary_expression_lt (expression (binary_expression (binary_expression_plus (expression (primary (identifier (single_identifier (simple_identifier next))))) (expression (primary (identifier (single_identifier (simple_identifier i)))))))) (expression (primary (identifier (single_identifier (simple_identifier NUMUNITS)))))))))) (expression (binary_expression (binary_expression_plus (expression (primary (identifier (single_identifier (simple_identifier next))))) (expression (primary (identifier (single_identifier (simple_identifier i)))))))) (expression (binary_expression (binary_expression_minus (expression (binary_expression (binary_expression_plus (expression (primary (identifier (single_identifier (simple_identifier next))))) (expression (primary (identifier (single_identifier (simple_identifier i)))))))) (expression (primary (identifier (single_identifier (simple_identifier NUMUNITS)))))))))))))))) (keyword_end \nend\n)))))))) (module_item (always_construct (keyword_always \nalways) (statement (procedural_timing_control_statement (delay_or_event_control (event_control (at_asterisk))) (statement_or_null (statement (seq_block (keyword_begin begin\n) (zero_or_more_statement (statement (blocking_assignment_semicolon (blocking_assignment (reg_lvalue (select_identifier (identifier (single_identifier (simple_identifier found))) (one_or_more_select (select (bit_select (expression (primary (number (unsigned_number 0))))))))) (expression (primary (select_identifier (identifier (single_identifier (simple_identifier finalRequest))) (one_or_more_select (select (bit_select (expression (primary (select_identifier (identifier (single_identifier (simple_identifier scan))) (one_or_more_select (select (bit_select (expression (primary (number (unsigned_number 0))))))))))))))))))) (statement (loop_statement (keyword_for for) (reg_assignment (reg_lvalue (identifier (single_identifier (simple_identifier i)))) (expression (primary (number (unsigned_number 1))))) (expression (binary_expression (binary_expression_lt (expression (primary (identifier (single_identifier (simple_identifier i))))) (expression (binary_expression (binary_expression_minus (expression (primary (identifier (single_identifier (simple_identifier NUMUNITS))))) (expression (primary (number (unsigned_number 1)))))))))) (reg_assignment (reg_lvalue (identifier (single_identifier (simple_identifier i)))) (expression (binary_expression (binary_expression_plus (expression (primary (identifier (single_identifier (simple_identifier i))))) (expression (primary (number (unsigned_number 1)))))))) (statement (blocking_assignment_semicolon (blocking_assignment (reg_lvalue (select_identifier (identifier (single_identifier (simple_identifier found))) (one_or_more_select (select (bit_select (expression (primary (identifier (single_identifier (simple_identifier i)))))))))) (expression (binary_expression (binary_expression_bw_or (expression (primary (select_identifier (identifier (single_identifier (simple_identifier found))) (one_or_more_select (select (bit_select (expression (binary_expression (binary_expression_minus (expression (primary (identifier (single_identifier (simple_identifier i))))) (expression (primary (number (unsigned_number 1))))))))))))) (expression (unary_expression (unary_operator (unary_operator_or)) (primary (select_identifier (identifier (single_identifier (simple_identifier finalRequest))) (one_or_more_select (select (bit_select (expression (primary (select_identifier (identifier (single_identifier (simple_identifier scan))) (one_or_more_select (select (bit_select (expression (primary (identifier (single_identifier (simple_identifier i))))))))))))))))))))))))))) (keyword_end \nend\n)))))))) (module_item (always_construct (keyword_always \nalways) (statement (procedural_timing_control_statement (delay_or_event_control (event_control (at_asterisk))) (statement_or_null (statement (seq_block (keyword_begin begin\n) (zero_or_more_statement (statement (blocking_assignment_semicolon (blocking_assignment (reg_lvalue (select_identifier (identifier (single_identifier (simple_identifier grantD))) (one_or_more_select (select (bit_select (expression (primary (select_identifier (identifier (single_identifier (simple_identifier scan))) (one_or_more_select (select (bit_select (expression (primary (number (unsigned_number 0))))))))))))))) (expression (primary (select_identifier (identifier (single_identifier (simple_identifier finalRequest))) (one_or_more_select (select (bit_select (expression (primary (select_identifier (identifier (single_identifier (simple_identifier scan))) (one_or_more_select (select (bit_select (expression (primary (number (unsigned_number 0))))))))))))))))))) (statement (loop_statement (keyword_for for) (reg_assignment (reg_lvalue (identifier (single_identifier (simple_identifier i)))) (expression (primary (number (unsigned_number 1))))) (expression (binary_expression (binary_expression_lt (expression (primary (identifier (single_identifier (simple_identifier i))))) (expression (primary (identifier (single_identifier (simple_identifier NUMUNITS)))))))) (reg_assignment (reg_lvalue (identifier (single_identifier (simple_identifier i)))) (expression (binary_expression (binary_expression_plus (expression (primary (identifier (single_identifier (simple_identifier i))))) (expression (primary (number (unsigned_number 1)))))))) (statement (blocking_assignment_semicolon (blocking_assignment (reg_lvalue (select_identifier (identifier (single_identifier (simple_identifier grantD))) (one_or_more_select (select (bit_select (expression (primary (select_identifier (identifier (single_identifier (simple_identifier scan))) (one_or_more_select (select (bit_select (expression (primary (identifier (single_identifier (simple_identifier i)))))))))))))))) (expression (binary_expression (binary_expression_lg_and (expression (primary (select_identifier (identifier (single_identifier (simple_identifier finalRequest))) (one_or_more_select (select (bit_select (expression (primary (select_identifier (identifier (single_identifier (simple_identifier scan))) (one_or_more_select (select (bit_select (expression (primary (identifier (single_identifier (simple_identifier i))))))))))))))))) (expression (unary_expression (unary_operator (unary_operator_neg)) (primary (select_identifier (identifier (single_identifier (simple_identifier found))) (one_or_more_select (select (bit_select (expression (binary_expression (binary_expression_minus (expression (primary (identifier (single_identifier (simple_identifier i))))) (expression (primary (number (unsigned_number 1))))))))))))))))))))))) (keyword_end \nend\n)))))))) (module_item (always_construct (keyword_always \nalways) (statement (procedural_timing_control_statement (delay_or_event_control (event_control (at_event_expression (event_expression (expression (primary (identifier (single_identifier (simple_identifier grantD))))))))) (statement_or_null (statement (seq_block (keyword_begin begin\n) (zero_or_more_statement (statement (blocking_assignment_semicolon (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier nextD)))) (expression (primary (number (unsigned_number 0))))))) (statement (loop_statement (keyword_for for) (reg_assignment (reg_lvalue (identifier (single_identifier (simple_identifier i)))) (expression (primary (number (unsigned_number 0))))) (expression (binary_expression (binary_expression_lt (expression (primary (identifier (single_identifier (simple_identifier i))))) (expression (binary_expression (binary_expression_minus (expression (primary (identifier (single_identifier (simple_identifier NUMUNITS))))) (expression (primary (number (unsigned_number 1)))))))))) (reg_assignment (reg_lvalue (identifier (single_identifier (simple_identifier i)))) (expression (binary_expression (binary_expression_plus (expression (primary (identifier (single_identifier (simple_identifier i))))) (expression (primary (number (unsigned_number 1)))))))) (statement (conditional_statement (keyword_if if) (expression (primary (select_identifier (identifier (single_identifier (simple_identifier grantD))) (one_or_more_select (select (bit_select (expression (primary (identifier (single_identifier (simple_identifier i))))))))))) (statement_or_null (statement (blocking_assignment_semicolon (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier nextD)))) (expression (binary_expression (binary_expression_plus (expression (primary (identifier (single_identifier (simple_identifier v))))) (expression (primary (number (unsigned_number 1))))))))))) (zero_or_one_else_statement_or_null)))))) (keyword_end \nend\n))))))))) (keyword_endmodule \nendmodule\n)))))
