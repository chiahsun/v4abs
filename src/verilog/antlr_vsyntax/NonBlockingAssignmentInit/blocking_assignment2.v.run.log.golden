(init (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier (alpha c) (alphanum a) (alphanum x) _ (alphanum s) (alphanum u) (alphanum m))))) = (expression ( (expression (expression (primary (identifier (single_identifier (simple_identifier (alpha C)))) [ (expression (primary (number (unsigned_number (digit 0))))) ])) ? (expression ( (expression (expression (primary (concatenation { (expression (primary (multiple_concatenation { (expression (primary (number (unsigned_number (digit 4) (digit 8))))) { (expression (primary (identifier (single_identifier (simple_identifier (alpha A)))) [ (expression (primary (identifier (single_identifier (simple_identifier (alpha r) (alphanum e) (alphanum g) _ (alphanum k)))))) ] [ (expression (primary (number (unsigned_number (digit 0))))) ] [ (expression (primary (number (unsigned_number (digit 1) (digit 5))))) ])) } }))) , (expression (primary (identifier (single_identifier (simple_identifier (alpha A)))) [ (expression (primary (identifier (single_identifier (simple_identifier (alpha r) (alphanum e) (alphanum g) _ (alphanum k)))))) ] [ (expression (primary (number (unsigned_number (digit 0))))) ])) }))) (binary_operator *) (expression (expression (primary (number (heximal_number (unsigned_number (digit 6) (digit 4)) 'h (heximal_digit 0) (heximal_digit C) (heximal_digit C) (heximal_digit C) (heximal_digit C) (heximal_digit C) (heximal_digit C) (heximal_digit D))))) (binary_operator *) (expression (primary (concatenation { (expression (primary (multiple_concatenation { (expression (primary (number (unsigned_number (digit 3) (digit 2))))) { (expression (primary (identifier (single_identifier (simple_identifier (alpha X)))) [ (expression (primary (number (unsigned_number (digit 0))))) ] [ (expression (primary (number (unsigned_number (digit 4) (digit 7))))) ])) } }))) , (expression (primary (identifier (single_identifier (simple_identifier (alpha X)))) [ (expression (primary (number (unsigned_number (digit 0))))) ] [ (expression (primary (number (unsigned_number (digit 4) (digit 7))))) : (expression (primary (number (unsigned_number (digit 1) (digit 6))))) ])) }))))) )) : (expression (primary (number (unsigned_number (digit 0)))))) ))) ;)
