(init (source_text (description (module_declaration (module_keyword (keyword_module module )) (identifier (single_identifier (simple_identifier FCR))) (list_of_ports ( (port (port_expression (port_reference (identifier (single_identifier (simple_identifier clk)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier en)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier addr)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier write_ready)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier ready)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier data_valid)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier data_out)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier done)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier F_IO_A)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier F_CLE_A)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier F_ALE_A)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier F_REN_A)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier F_WEN_A)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier F_RB_A)))))) )) ; (module_item (module_item_declaration (input_declaration (keyword_input input ) (list_of_port_identifiers (identifier (single_identifier (simple_identifier clk)))) ;))) (module_item (module_item_declaration (input_declaration (keyword_input \ninput ) (list_of_port_identifiers (identifier (single_identifier (simple_identifier en)))) ;))) (module_item (module_item_declaration (input_declaration (keyword_input \ninput ) (range [ (constant_expression (constant_primary (number (unsigned_number 8)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_port_identifiers (identifier (single_identifier (simple_identifier addr)))) ;))) (module_item (module_item_declaration (input_declaration (keyword_input \ninput ) (list_of_port_identifiers (identifier (single_identifier (simple_identifier write_ready)))) ;))) (module_item (module_item_declaration (output_declaration (keyword_output \noutput ) (list_of_port_identifiers (identifier (single_identifier (simple_identifier ready)))) ;))) (module_item (module_item_declaration (output_declaration (keyword_output \noutput ) (list_of_port_identifiers (identifier (single_identifier (simple_identifier data_valid)))) ;))) (module_item (module_item_declaration (output_declaration (keyword_output \noutput ) (range [ (constant_expression (constant_primary (number (unsigned_number 7)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_port_identifiers (identifier (single_identifier (simple_identifier data_out)))) ;))) (module_item (module_item_declaration (output_declaration (keyword_output \noutput ) (list_of_port_identifiers (identifier (single_identifier (simple_identifier done)))) ;))) (module_item (module_item_declaration (inout_declaration (keyword_inout inout ) (range [ (constant_expression (constant_primary (number (unsigned_number 7)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_port_identifiers (identifier (single_identifier (simple_identifier F_IO_A)))) ;))) (module_item (module_item_declaration (output_declaration (keyword_output \noutput ) (list_of_port_identifiers (identifier (single_identifier (simple_identifier F_CLE_A)))) ;))) (module_item (module_item_declaration (output_declaration (keyword_output \noutput ) (list_of_port_identifiers (identifier (single_identifier (simple_identifier F_ALE_A)))) ;))) (module_item (module_item_declaration (output_declaration (keyword_output \noutput ) (list_of_port_identifiers (identifier (single_identifier (simple_identifier F_REN_A)))) ;))) (module_item (module_item_declaration (output_declaration (keyword_output \noutput ) (list_of_port_identifiers (identifier (single_identifier (simple_identifier F_WEN_A)))) ;))) (module_item (module_item_declaration (input_declaration (keyword_input \ninput ) (list_of_port_identifiers (identifier (single_identifier (simple_identifier F_RB_A)))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire wire )) (range [ (constant_expression (constant_primary (number (unsigned_number 7)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_net_identifiers (identifier (single_identifier (simple_identifier a0_7)))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire \nwire )) (range [ (constant_expression (constant_primary (number (unsigned_number 7)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_net_identifiers (identifier (single_identifier (simple_identifier a8)))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire \nwire )) (range [ (constant_expression (constant_primary (number (unsigned_number 7)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_net_identifiers (identifier (single_identifier (simple_identifier a9_16)))) ;))) (module_item (continuous_assign (keyword_assign assign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier a0_7)))) = (expression (primary (number (heximal_number 8'h00)))))) ;)) (module_item (continuous_assign (keyword_assign \nassign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier a8)))) = (expression (primary (number (heximal_number 8'h00)))))) ;)) (module_item (continuous_assign (keyword_assign \nassign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier a9_16)))) = (expression (primary (identifier (single_identifier (simple_identifier addr))) [ (expression (primary (number (unsigned_number 7)))) : (expression (primary (number (unsigned_number 0)))) ])))) ;)) (module_item (continuous_assign (keyword_assign \nassign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier a17)))) = (expression (primary (identifier (single_identifier (simple_identifier addr))) [ (expression (primary (number (unsigned_number 8)))) ])))) ;)) (module_item (module_item_declaration (reg_declaration (keyword_reg reg ) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier data_valid))))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg \nreg ) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier next_data_valid))))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg reg ) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier ready))))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg \nreg ) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier next_ready))))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg reg ) (range [ (constant_expression (constant_primary (number (unsigned_number 3)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier seq))))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg \nreg ) (range [ (constant_expression (constant_primary (number (unsigned_number 3)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier next_seq))))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg \nreg ) (range [ (constant_expression (constant_primary (number (unsigned_number 2)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier state))))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg \nreg ) (range [ (constant_expression (constant_primary (number (unsigned_number 2)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier next_state))))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire wire )) (list_of_net_identifiers (identifier (single_identifier (simple_identifier cle))) , (identifier (single_identifier (simple_identifier wen))) , (identifier (single_identifier (simple_identifier ale))) , (identifier (single_identifier (simple_identifier ren)))) ;))) (module_item (continuous_assign (keyword_assign \nassign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier F_CLE_A)))) = (expression (primary (identifier (single_identifier (simple_identifier cle))))))) ;)) (module_item (continuous_assign (keyword_assign \nassign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier F_ALE_A)))) = (expression (primary (identifier (single_identifier (simple_identifier ale))))))) ;)) (module_item (continuous_assign (keyword_assign \nassign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier F_REN_A)))) = (expression (primary (identifier (single_identifier (simple_identifier ren))))))) ;)) (module_item (continuous_assign (keyword_assign \nassign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier F_WEN_A)))) = (expression (primary (identifier (single_identifier (simple_identifier wen))))))) ;)) (module_item (module_item_declaration (reg_declaration (keyword_reg reg ) (range [ (constant_expression (constant_primary (number (unsigned_number 7)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier io))))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg \nreg ) (range [ (constant_expression (constant_primary (number (unsigned_number 7)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier next_io))))) ;))) (module_item (module_item_declaration (parameter_declaration (keyword_parameter parameter ) (list_of_param_assignments (param_assignment (identifier (single_identifier (simple_identifier STATE_INIT))) = (expression (primary (number (binary_number 3'b000))))) , (param_assignment (identifier (single_identifier (simple_identifier STATE_SEQ))) = (expression (expression (primary (identifier (single_identifier (simple_identifier STATE_INIT))))) + (expression (primary (number (unsigned_number 1)))))) , (param_assignment (identifier (single_identifier (simple_identifier STATE_WAIT_RB))) = (expression (expression (primary (identifier (single_identifier (simple_identifier STATE_SEQ))))) + (expression (primary (number (unsigned_number 1)))))) , (param_assignment (identifier (single_identifier (simple_identifier STATE_DATA_READ))) = (expression (expression (primary (identifier (single_identifier (simple_identifier STATE_WAIT_RB))))) + (expression (primary (number (unsigned_number 1)))))) , (param_assignment (identifier (single_identifier (simple_identifier STATE_DONE))) = (expression (expression (primary (identifier (single_identifier (simple_identifier STATE_DATA_READ))))) + (expression (primary (number (unsigned_number 1))))))) ;))) (module_item (module_item_declaration (parameter_declaration (keyword_parameter parameter ) (list_of_param_assignments (param_assignment (identifier (single_identifier (simple_identifier CLE_SEQ))) = (expression (primary (number (binary_number 12'b000000000110))))) , (param_assignment (identifier (single_identifier (simple_identifier WEN_SEQ))) = (expression (primary (number (binary_number 12'b111101010101))))) , (param_assignment (identifier (single_identifier (simple_identifier ALE_SEQ))) = (expression (primary (number (binary_number 12'b000111111000))))) , (param_assignment (identifier (single_identifier (simple_identifier REN_SEQ))) = (expression (primary (number (binary_number 12'b101111111111)))))) ;))) (module_item (module_item_declaration (parameter_declaration (keyword_parameter parameter ) (list_of_param_assignments (param_assignment (identifier (single_identifier (simple_identifier SEQ_INIT))) = (expression (primary (number (heximal_number 4'h0))))) , (param_assignment (identifier (single_identifier (simple_identifier DATA_VALID_INIT))) = (expression (primary (number (binary_number 1'b0))))) , (param_assignment (identifier (single_identifier (simple_identifier IO_INIT))) = (expression (primary (number (heximal_number 8'h0))))) , (param_assignment (identifier (single_identifier (simple_identifier CNT_INIT))) = (expression (primary (number (heximal_number 10'h0))))) , (param_assignment (identifier (single_identifier (simple_identifier DONE_INIT))) = (expression (primary (number (binary_number 1'b0))))) , (param_assignment (identifier (single_identifier (simple_identifier READY_INIT))) = (expression (primary (number (binary_number 1'b0))))) , (param_assignment (identifier (single_identifier (simple_identifier DATA_OUT_INIT))) = (expression (primary (number (binary_number 8'b0)))))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire wire )) (range [ (constant_expression (constant_primary (number (unsigned_number 11)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_net_identifiers (identifier (single_identifier (simple_identifier cle_seq)))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire \nwire )) (range [ (constant_expression (constant_primary (number (unsigned_number 11)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_net_identifiers (identifier (single_identifier (simple_identifier wen_seq)))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire \nwire )) (range [ (constant_expression (constant_primary (number (unsigned_number 11)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_net_identifiers (identifier (single_identifier (simple_identifier ale_seq)))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire \nwire )) (range [ (constant_expression (constant_primary (number (unsigned_number 11)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_net_identifiers (identifier (single_identifier (simple_identifier ren_seq)))) ;))) (module_item (continuous_assign (keyword_assign assign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier cle_seq)))) = (expression (primary (identifier (single_identifier (simple_identifier CLE_SEQ))))))) ;)) (module_item (continuous_assign (keyword_assign \nassign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier wen_seq)))) = (expression (primary (identifier (single_identifier (simple_identifier WEN_SEQ))))))) ;)) (module_item (continuous_assign (keyword_assign \nassign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier ale_seq)))) = (expression (primary (identifier (single_identifier (simple_identifier ALE_SEQ))))))) ;)) (module_item (continuous_assign (keyword_assign \nassign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier ren_seq)))) = (expression (primary (identifier (single_identifier (simple_identifier REN_SEQ))))))) ;)) (module_item (continuous_assign (keyword_assign assign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier cle)))) = (expression (primary (identifier (single_identifier (simple_identifier cle_seq))) [ (expression (primary (identifier (single_identifier (simple_identifier seq))))) ])))) ;)) (module_item (continuous_assign (keyword_assign \nassign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier wen)))) = (expression (primary (identifier (single_identifier (simple_identifier wen_seq))) [ (expression (primary (identifier (single_identifier (simple_identifier seq))))) ])))) ;)) (module_item (continuous_assign (keyword_assign \nassign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier ale)))) = (expression (primary (identifier (single_identifier (simple_identifier ale_seq))) [ (expression (primary (identifier (single_identifier (simple_identifier seq))))) ])))) ;)) (module_item (continuous_assign (keyword_assign \nassign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier ren)))) = (expression (primary (identifier (single_identifier (simple_identifier ren_seq))) [ (expression (primary (identifier (single_identifier (simple_identifier seq))))) ])))) ;)) (module_item (continuous_assign (keyword_assign assign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier F_IO_A)))) = (expression (primary (identifier (single_identifier (simple_identifier io))))))) ;)) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire wire )) (range [ (constant_expression (constant_primary (number (unsigned_number 7)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_net_identifiers (identifier (single_identifier (simple_identifier addr_part)))) ;))) (module_item (continuous_assign (keyword_assign \nassign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier addr_part)))) = (expression (expression (expression (expression (expression ( (expression (expression (expression (primary (identifier (single_identifier (simple_identifier seq))))) = = (expression (primary (number (unsigned_number 0))))) | (expression (expression (unary_operator |) (primary (identifier (single_identifier (simple_identifier seq))))) = = (expression (primary (number (unsigned_number 1)))))) )) ? (expression (primary (identifier (single_identifier (simple_identifier a8))))) : (expression ( (expression (expression (expression (primary (identifier (single_identifier (simple_identifier seq))))) = = (expression (primary (number (unsigned_number 2))))) | (expression (expression (unary_operator |) (primary (identifier (single_identifier (simple_identifier seq))))) = = (expression (primary (number (unsigned_number 3)))))) ))) ? (expression (primary (identifier (single_identifier (simple_identifier a0_7))))) : (expression ( (expression (expression (expression (primary (identifier (single_identifier (simple_identifier seq))))) = = (expression (primary (number (unsigned_number 4))))) | (expression (expression (unary_operator |) (primary (identifier (single_identifier (simple_identifier seq))))) = = (expression (primary (number (unsigned_number 5)))))) ))) ? (expression (primary (identifier (single_identifier (simple_identifier a9_16))))) : (expression ( (expression (expression (expression (primary (identifier (single_identifier (simple_identifier seq))))) = = (expression (primary (number (unsigned_number 6))))) | (expression (expression (unary_operator |) (primary (identifier (single_identifier (simple_identifier seq))))) = = (expression (primary (number (unsigned_number 7)))))) ))) ? (expression (primary (identifier (single_identifier (simple_identifier a17))))) : (expression (primary (number (heximal_number 8'h0))))))) ;)) (module_item (module_item_declaration (reg_declaration (keyword_reg reg ) (range [ (constant_expression (constant_primary (number (unsigned_number 9)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier cnt))))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg \nreg ) (range [ (constant_expression (constant_primary (number (unsigned_number 9)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier next_cnt))))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg reg ) (range [ (constant_expression (constant_primary (number (unsigned_number 7)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier data_out))))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg \nreg ) (range [ (constant_expression (constant_primary (number (unsigned_number 7)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier next_data_out))))) ;))) (module_item (always_construct (keyword_always always ) (statement (procedural_timing_control_statement (delay_or_event_control (event_control @ ( * ))) (statement_or_null (statement (seq_block (keyword_begin  begin\n) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_state)))) = (expression (primary (identifier (single_identifier (simple_identifier state)))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_seq)))) = (expression (primary (identifier (single_identifier (simple_identifier seq)))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_data_valid)))) = (expression (primary (identifier (single_identifier (simple_identifier data_valid)))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_io)))) = (expression (primary (identifier (single_identifier (simple_identifier io)))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_cnt)))) = (expression (primary (identifier (single_identifier (simple_identifier cnt)))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_ready)))) = (expression (primary (identifier (single_identifier (simple_identifier ready)))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_data_out)))) = (expression (primary (identifier (single_identifier (simple_identifier data_out)))))) ;) (statement (case_statement (keyword_case case ) ( (expression (primary (identifier (single_identifier (simple_identifier state))))) ) (case_item (expression (primary (identifier (single_identifier (simple_identifier STATE_INIT))))) : (statement_or_null (statement (seq_block (keyword_begin  begin\n) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_state)))) = (expression (primary (identifier (single_identifier (simple_identifier STATE_SEQ)))))) ;) (keyword_end end\n))))) (case_item (expression (primary (identifier (single_identifier (simple_identifier STATE_SEQ))))) : (statement_or_null (statement (seq_block (keyword_begin  begin\n) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_state)))) = (expression (expression ( (expression (expression (primary (identifier (single_identifier (simple_identifier seq))))) = = (expression (primary (number (unsigned_number 9))))) )) ? (expression (primary (identifier (single_identifier (simple_identifier STATE_WAIT_RB))))) : (expression (primary (identifier (single_identifier (simple_identifier STATE_SEQ))))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_seq)))) = (expression (expression (primary (identifier (single_identifier (simple_identifier seq))))) + (expression (primary (number (unsigned_number 1)))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_io)))) = (expression (primary (identifier (single_identifier (simple_identifier addr_part)))))) ;) (keyword_end end\n))))) (case_item (expression (primary (identifier (single_identifier (simple_identifier STATE_WAIT_RB))))) : (statement_or_null (statement (seq_block (keyword_begin  begin\n) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_state)))) = (expression (expression ( (expression (primary (identifier (single_identifier (simple_identifier write_ready))))) )) ? (expression (primary (identifier (single_identifier (simple_identifier STATE_DATA_READ))))) : (expression (primary (identifier (single_identifier (simple_identifier state))))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_io)))) = (expression (primary (number (heximal_number 8'hzz))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_ready)))) = (expression (primary (number (binary_number 1'b1))))) ;) (keyword_end end\n))))) (case_item (expression (primary (identifier (single_identifier (simple_identifier STATE_DATA_READ))))) : (statement_or_null (statement (seq_block (keyword_begin  begin\n) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_state)))) = (expression (expression ( (expression (expression (primary (identifier (single_identifier (simple_identifier cnt))))) = = (expression (primary (number (unsigned_number 511))))) )) ? (expression (primary (identifier (single_identifier (simple_identifier STATE_DONE))))) : (expression (primary (identifier (single_identifier (simple_identifier state))))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_data_valid)))) = (expression (primary (number (binary_number 1'b1))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_seq)))) = (expression (expression ( (expression (expression (primary (identifier (single_identifier (simple_identifier seq))))) = = (expression (primary (number (unsigned_number 10))))) )) ? (expression (primary (number (unsigned_number 11)))) : (expression (primary (number (unsigned_number 10)))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_cnt)))) = (expression (expression ( (expression (expression (primary (identifier (single_identifier (simple_identifier seq))))) = = (expression (primary (number (unsigned_number 11))))) )) ? (expression ( (expression (expression (primary (identifier (single_identifier (simple_identifier cnt))))) + (expression (primary (number (unsigned_number 1))))) )) : (expression (primary (identifier (single_identifier (simple_identifier cnt))))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_data_out)))) = (expression (expression ( (expression (expression (primary (identifier (single_identifier (simple_identifier seq))))) = = (expression (primary (number (unsigned_number 10))))) )) ? (expression (primary (identifier (single_identifier (simple_identifier F_IO_A))))) : (expression (primary (identifier (single_identifier (simple_identifier data_out))))))) ;) (keyword_end end\n))))) (case_item (expression (primary (identifier (single_identifier (simple_identifier STATE_DONE))))) : (statement_or_null (statement (seq_block (keyword_begin  begin\n) (keyword_end end\n))))) (keyword_endcase endcase\n))) (keyword_end end\n)))))))) (module_item (continuous_assign (keyword_assign \nassign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier done)))) = (expression ( (expression (expression (primary (identifier (single_identifier (simple_identifier state))))) = = (expression (primary (identifier (single_identifier (simple_identifier STATE_DONE)))))) )))) ;)) (module_item (always_construct (keyword_always always ) (statement (procedural_timing_control_statement (delay_or_event_control (event_control @ ( (event_expression (keyword_posedge posedge ) (expression (primary (identifier (single_identifier (simple_identifier clk)))))) ))) (statement_or_null (statement (seq_block (keyword_begin  begin\n) (statement (conditional_statement (keyword_if if) ( (expression (unary_operator !) (primary (identifier (single_identifier (simple_identifier en))))) ) (statement_or_null (statement (seq_block (keyword_begin  begin\n) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier state)))) < = (expression (primary (identifier (single_identifier (simple_identifier STATE_INIT)))))) ;) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier seq)))) < = (expression (primary (identifier (single_identifier (simple_identifier SEQ_INIT)))))) ;) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier data_valid)))) < = (expression (primary (identifier (single_identifier (simple_identifier DATA_VALID_INIT)))))) ;) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier io)))) < = (expression (primary (identifier (single_identifier (simple_identifier IO_INIT)))))) ;) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier cnt)))) < = (expression (primary (identifier (single_identifier (simple_identifier CNT_INIT)))))) ;) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier ready)))) < = (expression (primary (identifier (single_identifier (simple_identifier READY_INIT)))))) ;) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier data_out)))) < = (expression (primary (identifier (single_identifier (simple_identifier DATA_OUT_INIT)))))) ;) (keyword_end end\n)))) (keyword_else else) (statement_or_null (statement (seq_block (keyword_begin  begin ) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier state)))) < = (expression (primary (identifier (single_identifier (simple_identifier next_state)))))) ;) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier seq)))) < = (expression (primary (identifier (single_identifier (simple_identifier next_seq)))))) ;) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier data_valid)))) < = (expression (primary (identifier (single_identifier (simple_identifier next_data_valid)))))) ;) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier io)))) < = (expression (primary (identifier (single_identifier (simple_identifier next_io)))))) ;) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier cnt)))) < = (expression (primary (identifier (single_identifier (simple_identifier next_cnt)))))) ;) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier ready)))) < = (expression (primary (identifier (single_identifier (simple_identifier next_ready)))))) ;) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier data_out)))) < = (expression (primary (identifier (single_identifier (simple_identifier next_data_out)))))) ;) (keyword_end end\n)))))) (keyword_end end\n)))))))) (keyword_endmodule \nendmodule ))) (description (module_declaration (module_keyword (keyword_module module )) (identifier (single_identifier (simple_identifier FCW))) (list_of_ports ( (port (port_expression (port_reference (identifier (single_identifier (simple_identifier clk)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier en)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier addr)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier read_ready)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier data)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier ready)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier done)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier F_IO_B)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier F_CLE_B)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier F_ALE_B)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier F_REN_B)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier F_WEN_B)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier F_RB_B)))))) )) ; (module_item (module_item_declaration (input_declaration (keyword_input input ) (list_of_port_identifiers (identifier (single_identifier (simple_identifier clk)))) ;))) (module_item (module_item_declaration (input_declaration (keyword_input \ninput ) (list_of_port_identifiers (identifier (single_identifier (simple_identifier en)))) ;))) (module_item (module_item_declaration (input_declaration (keyword_input \ninput ) (range [ (constant_expression (constant_primary (number (unsigned_number 8)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_port_identifiers (identifier (single_identifier (simple_identifier addr)))) ;))) (module_item (module_item_declaration (input_declaration (keyword_input \ninput ) (list_of_port_identifiers (identifier (single_identifier (simple_identifier read_ready)))) ;))) (module_item (module_item_declaration (input_declaration (keyword_input \ninput ) (range [ (constant_expression (constant_primary (number (unsigned_number 7)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_port_identifiers (identifier (single_identifier (simple_identifier data)))) ;))) (module_item (module_item_declaration (output_declaration (keyword_output \noutput ) (list_of_port_identifiers (identifier (single_identifier (simple_identifier ready)))) ;))) (module_item (module_item_declaration (output_declaration (keyword_output \noutput ) (list_of_port_identifiers (identifier (single_identifier (simple_identifier done)))) ;))) (module_item (module_item_declaration (inout_declaration (keyword_inout inout ) (range [ (constant_expression (constant_primary (number (unsigned_number 7)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_port_identifiers (identifier (single_identifier (simple_identifier F_IO_B)))) ;))) (module_item (module_item_declaration (output_declaration (keyword_output \noutput ) (list_of_port_identifiers (identifier (single_identifier (simple_identifier F_CLE_B)))) ;))) (module_item (module_item_declaration (output_declaration (keyword_output \noutput ) (list_of_port_identifiers (identifier (single_identifier (simple_identifier F_ALE_B)))) ;))) (module_item (module_item_declaration (output_declaration (keyword_output \noutput ) (list_of_port_identifiers (identifier (single_identifier (simple_identifier F_REN_B)))) ;))) (module_item (module_item_declaration (output_declaration (keyword_output \noutput ) (list_of_port_identifiers (identifier (single_identifier (simple_identifier F_WEN_B)))) ;))) (module_item (module_item_declaration (input_declaration (keyword_input \ninput ) (list_of_port_identifiers (identifier (single_identifier (simple_identifier F_RB_B)))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire wire )) (range [ (constant_expression (constant_primary (number (unsigned_number 7)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_net_identifiers (identifier (single_identifier (simple_identifier a0_7)))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire \nwire )) (range [ (constant_expression (constant_primary (number (unsigned_number 7)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_net_identifiers (identifier (single_identifier (simple_identifier a8)))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire \nwire )) (range [ (constant_expression (constant_primary (number (unsigned_number 7)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_net_identifiers (identifier (single_identifier (simple_identifier a9_16)))) ;))) (module_item (continuous_assign (keyword_assign assign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier a0_7)))) = (expression (primary (number (heximal_number 8'h00)))))) ;)) (module_item (continuous_assign (keyword_assign \nassign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier a8)))) = (expression (primary (number (heximal_number 8'h80)))))) ;)) (module_item (continuous_assign (keyword_assign \nassign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier a9_16)))) = (expression (primary (identifier (single_identifier (simple_identifier addr))) [ (expression (primary (number (unsigned_number 7)))) : (expression (primary (number (unsigned_number 0)))) ])))) ;)) (module_item (continuous_assign (keyword_assign \nassign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier a17)))) = (expression (primary (identifier (single_identifier (simple_identifier addr))) [ (expression (primary (number (unsigned_number 8)))) ])))) ;)) (module_item (module_item_declaration (reg_declaration (keyword_reg reg ) (range [ (constant_expression (constant_primary (number (unsigned_number 4)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier seq))))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg \nreg ) (range [ (constant_expression (constant_primary (number (unsigned_number 4)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier next_seq))))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg \nreg ) (range [ (constant_expression (constant_primary (number (unsigned_number 2)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier state))))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg \nreg ) (range [ (constant_expression (constant_primary (number (unsigned_number 2)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier next_state))))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg reg ) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier ready))))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg \nreg ) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier next_ready))))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire wire )) (list_of_net_identifiers (identifier (single_identifier (simple_identifier cle))) , (identifier (single_identifier (simple_identifier wen))) , (identifier (single_identifier (simple_identifier ale))) , (identifier (single_identifier (simple_identifier ren)))) ;))) (module_item (continuous_assign (keyword_assign \nassign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier F_CLE_B)))) = (expression (primary (identifier (single_identifier (simple_identifier cle))))))) ;)) (module_item (continuous_assign (keyword_assign \nassign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier F_ALE_B)))) = (expression (primary (identifier (single_identifier (simple_identifier ale))))))) ;)) (module_item (continuous_assign (keyword_assign \nassign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier F_REN_B)))) = (expression (primary (identifier (single_identifier (simple_identifier ren))))))) ;)) (module_item (continuous_assign (keyword_assign \nassign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier F_WEN_B)))) = (expression (primary (identifier (single_identifier (simple_identifier wen))))))) ;)) (module_item (module_item_declaration (reg_declaration (keyword_reg reg ) (range [ (constant_expression (constant_primary (number (unsigned_number 7)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier io))))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg \nreg ) (range [ (constant_expression (constant_primary (number (unsigned_number 7)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier next_io))))) ;))) (module_item (module_item_declaration (parameter_declaration (keyword_parameter parameter ) (list_of_param_assignments (param_assignment (identifier (single_identifier (simple_identifier STATE_INIT))) = (expression (primary (number (binary_number 3'b000))))) , (param_assignment (identifier (single_identifier (simple_identifier STATE_SEQ))) = (expression (expression (primary (identifier (single_identifier (simple_identifier STATE_INIT))))) + (expression (primary (number (unsigned_number 1)))))) , (param_assignment (identifier (single_identifier (simple_identifier STATE_WAIT))) = (expression (expression (primary (identifier (single_identifier (simple_identifier STATE_SEQ))))) + (expression (primary (number (unsigned_number 1)))))) , (param_assignment (identifier (single_identifier (simple_identifier STATE_DATA_WRITE))) = (expression (expression (primary (identifier (single_identifier (simple_identifier STATE_WAIT))))) + (expression (primary (number (unsigned_number 1)))))) , (param_assignment (identifier (single_identifier (simple_identifier STATE_WAIT_RB))) = (expression (expression (primary (identifier (single_identifier (simple_identifier STATE_DATA_WRITE))))) + (expression (primary (number (unsigned_number 1)))))) , (param_assignment (identifier (single_identifier (simple_identifier STATE_DONE))) = (expression (expression (primary (identifier (single_identifier (simple_identifier STATE_WAIT_RB))))) + (expression (primary (number (unsigned_number 1))))))) ;))) (module_item (module_item_declaration (parameter_declaration (keyword_parameter parameter ) (list_of_param_assignments (param_assignment (identifier (single_identifier (simple_identifier CLE_SEQ))) = (expression (primary (number (binary_number 17'b01110000000000110))))) , (param_assignment (identifier (single_identifier (simple_identifier WEN_SEQ))) = (expression (primary (number (binary_number 17'b11011101101010101))))) , (param_assignment (identifier (single_identifier (simple_identifier ALE_SEQ))) = (expression (primary (number (binary_number 17'b00000000111111000))))) , (param_assignment (identifier (single_identifier (simple_identifier REN_SEQ))) = (expression (primary (number (binary_number 17'b11111111111111111)))))) ;))) (module_item (module_item_declaration (parameter_declaration (keyword_parameter parameter ) (list_of_param_assignments (param_assignment (identifier (single_identifier (simple_identifier SEQ_INIT))) = (expression (primary (number (heximal_number 4'h0))))) , (param_assignment (identifier (single_identifier (simple_identifier DATA_VALID_INIT))) = (expression (primary (number (binary_number 1'b0))))) , (param_assignment (identifier (single_identifier (simple_identifier IO_INIT))) = (expression (primary (number (heximal_number 8'h0))))) , (param_assignment (identifier (single_identifier (simple_identifier CNT_INIT))) = (expression (primary (number (heximal_number 10'h0))))) , (param_assignment (identifier (single_identifier (simple_identifier DONE_INIT))) = (expression (primary (number (binary_number 1'b0))))) , (param_assignment (identifier (single_identifier (simple_identifier READY_INIT))) = (expression (primary (number (binary_number 1'b0)))))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire wire )) (range [ (constant_expression (constant_primary (number (unsigned_number 16)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_net_identifiers (identifier (single_identifier (simple_identifier cle_seq)))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire \nwire )) (range [ (constant_expression (constant_primary (number (unsigned_number 16)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_net_identifiers (identifier (single_identifier (simple_identifier wen_seq)))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire \nwire )) (range [ (constant_expression (constant_primary (number (unsigned_number 16)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_net_identifiers (identifier (single_identifier (simple_identifier ale_seq)))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire \nwire )) (range [ (constant_expression (constant_primary (number (unsigned_number 16)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_net_identifiers (identifier (single_identifier (simple_identifier ren_seq)))) ;))) (module_item (continuous_assign (keyword_assign assign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier cle_seq)))) = (expression (primary (identifier (single_identifier (simple_identifier CLE_SEQ))))))) ;)) (module_item (continuous_assign (keyword_assign \nassign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier wen_seq)))) = (expression (primary (identifier (single_identifier (simple_identifier WEN_SEQ))))))) ;)) (module_item (continuous_assign (keyword_assign \nassign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier ale_seq)))) = (expression (primary (identifier (single_identifier (simple_identifier ALE_SEQ))))))) ;)) (module_item (continuous_assign (keyword_assign \nassign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier ren_seq)))) = (expression (primary (identifier (single_identifier (simple_identifier REN_SEQ))))))) ;)) (module_item (continuous_assign (keyword_assign assign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier cle)))) = (expression (primary (identifier (single_identifier (simple_identifier cle_seq))) [ (expression (primary (identifier (single_identifier (simple_identifier seq))))) ])))) ;)) (module_item (continuous_assign (keyword_assign \nassign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier wen)))) = (expression (primary (identifier (single_identifier (simple_identifier wen_seq))) [ (expression (primary (identifier (single_identifier (simple_identifier seq))))) ])))) ;)) (module_item (continuous_assign (keyword_assign \nassign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier ale)))) = (expression (primary (identifier (single_identifier (simple_identifier ale_seq))) [ (expression (primary (identifier (single_identifier (simple_identifier seq))))) ])))) ;)) (module_item (continuous_assign (keyword_assign \nassign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier ren)))) = (expression (primary (identifier (single_identifier (simple_identifier ren_seq))) [ (expression (primary (identifier (single_identifier (simple_identifier seq))))) ])))) ;)) (module_item (continuous_assign (keyword_assign assign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier F_IO_B)))) = (expression (expression ( (expression (expression (expression (primary (identifier (single_identifier (simple_identifier state))))) = = (expression (primary (identifier (single_identifier (simple_identifier STATE_SEQ)))))) | (expression (expression (unary_operator |) (primary (identifier (single_identifier (simple_identifier state))))) = = (expression (primary (identifier (single_identifier (simple_identifier STATE_WAIT_RB))))))) )) ? (expression (primary (identifier (single_identifier (simple_identifier io))))) : (expression (primary (identifier (single_identifier (simple_identifier data)))))))) ;)) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire wire )) (range [ (constant_expression (constant_primary (number (unsigned_number 7)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_net_identifiers (identifier (single_identifier (simple_identifier addr_part)))) ;))) (module_item (continuous_assign (keyword_assign \nassign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier addr_part)))) = (expression (expression (expression (expression (expression ( (expression (expression (expression (primary (identifier (single_identifier (simple_identifier seq))))) = = (expression (primary (number (unsigned_number 0))))) | (expression (expression (unary_operator |) (primary (identifier (single_identifier (simple_identifier seq))))) = = (expression (primary (number (unsigned_number 1)))))) )) ? (expression (primary (identifier (single_identifier (simple_identifier a8))))) : (expression ( (expression (expression (expression (primary (identifier (single_identifier (simple_identifier seq))))) = = (expression (primary (number (unsigned_number 2))))) | (expression (expression (unary_operator |) (primary (identifier (single_identifier (simple_identifier seq))))) = = (expression (primary (number (unsigned_number 3)))))) ))) ? (expression (primary (identifier (single_identifier (simple_identifier a0_7))))) : (expression ( (expression (expression (expression (primary (identifier (single_identifier (simple_identifier seq))))) = = (expression (primary (number (unsigned_number 4))))) | (expression (expression (unary_operator |) (primary (identifier (single_identifier (simple_identifier seq))))) = = (expression (primary (number (unsigned_number 5)))))) ))) ? (expression (primary (identifier (single_identifier (simple_identifier a9_16))))) : (expression ( (expression (expression (expression (primary (identifier (single_identifier (simple_identifier seq))))) = = (expression (primary (number (unsigned_number 6))))) | (expression (expression (unary_operator |) (primary (identifier (single_identifier (simple_identifier seq))))) = = (expression (primary (number (unsigned_number 7)))))) ))) ? (expression (primary (identifier (single_identifier (simple_identifier a17))))) : (expression (primary (number (heximal_number 8'h0))))))) ;)) (module_item (module_item_declaration (reg_declaration (keyword_reg reg ) (range [ (constant_expression (constant_primary (number (unsigned_number 9)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier cnt))))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg \nreg ) (range [ (constant_expression (constant_primary (number (unsigned_number 9)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier next_cnt))))) ;))) (module_item (always_construct (keyword_always always ) (statement (procedural_timing_control_statement (delay_or_event_control (event_control @ ( * ))) (statement_or_null (statement (seq_block (keyword_begin  begin\n) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_state)))) = (expression (primary (identifier (single_identifier (simple_identifier state)))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_seq)))) = (expression (primary (identifier (single_identifier (simple_identifier seq)))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_io)))) = (expression (primary (identifier (single_identifier (simple_identifier io)))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_cnt)))) = (expression (primary (identifier (single_identifier (simple_identifier cnt)))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_ready)))) = (expression (primary (identifier (single_identifier (simple_identifier ready)))))) ;) (statement (case_statement (keyword_case case ) ( (expression (primary (identifier (single_identifier (simple_identifier state))))) ) (case_item (expression (primary (identifier (single_identifier (simple_identifier STATE_INIT))))) : (statement_or_null (statement (seq_block (keyword_begin  begin\n) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_state)))) = (expression (primary (identifier (single_identifier (simple_identifier STATE_SEQ)))))) ;) (keyword_end end\n))))) (case_item (expression (primary (identifier (single_identifier (simple_identifier STATE_SEQ))))) : (statement_or_null (statement (seq_block (keyword_begin  begin\n) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_state)))) = (expression (expression ( (expression (expression (primary (identifier (single_identifier (simple_identifier seq))))) = = (expression (primary (number (unsigned_number 9))))) )) ? (expression (primary (identifier (single_identifier (simple_identifier STATE_WAIT))))) : (expression (primary (identifier (single_identifier (simple_identifier STATE_SEQ))))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_seq)))) = (expression (expression (primary (identifier (single_identifier (simple_identifier seq))))) + (expression (primary (number (unsigned_number 1)))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_io)))) = (expression (primary (identifier (single_identifier (simple_identifier addr_part)))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_ready)))) = (expression (expression ( (expression (expression (primary (identifier (single_identifier (simple_identifier seq))))) = = (expression (primary (number (unsigned_number 9))))) )) ? (expression (primary (number (binary_number 1'b1)))) : (expression (primary (identifier (single_identifier (simple_identifier ready))))))) ;) (keyword_end end\n))))) (case_item (expression (primary (identifier (single_identifier (simple_identifier STATE_WAIT))))) : (statement_or_null (statement (seq_block (keyword_begin  begin\n) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_state)))) = (expression (expression ( (expression (primary (identifier (single_identifier (simple_identifier read_ready))))) )) ? (expression (primary (identifier (single_identifier (simple_identifier STATE_DATA_WRITE))))) : (expression (primary (identifier (single_identifier (simple_identifier state))))))) ;) (keyword_end end\n))))) (case_item (expression (primary (identifier (single_identifier (simple_identifier STATE_DATA_WRITE))))) : (statement_or_null (statement (seq_block (keyword_begin  begin\n) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_state)))) = (expression (expression ( (expression (expression (primary (identifier (single_identifier (simple_identifier cnt))))) = = (expression (primary (number (unsigned_number 511))))) )) ? (expression (primary (identifier (single_identifier (simple_identifier STATE_WAIT_RB))))) : (expression (primary (identifier (single_identifier (simple_identifier state))))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_seq)))) = (expression (expression (expression ( (expression (expression (primary (identifier (single_identifier (simple_identifier cnt))))) = = (expression (primary (number (unsigned_number 511))))) )) ? (expression (primary (number (unsigned_number 12)))) : (expression ( (expression (expression (primary (identifier (single_identifier (simple_identifier seq))))) = = (expression (primary (number (unsigned_number 10))))) ))) ? (expression (primary (number (unsigned_number 11)))) : (expression (primary (number (unsigned_number 10)))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_cnt)))) = (expression (expression ( (expression (expression (primary (identifier (single_identifier (simple_identifier seq))))) = = (expression (primary (number (unsigned_number 11))))) )) ? (expression ( (expression (expression (primary (identifier (single_identifier (simple_identifier cnt))))) + (expression (primary (number (unsigned_number 1))))) )) : (expression (primary (identifier (single_identifier (simple_identifier cnt))))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_io)))) = (expression (primary (identifier (single_identifier (simple_identifier data)))))) ;) (keyword_end end\n))))) (case_item (expression (primary (identifier (single_identifier (simple_identifier STATE_WAIT_RB))))) : (statement_or_null (statement (seq_block (keyword_begin  begin\n) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_io)))) = (expression (primary (number (heximal_number 8'h10))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_seq)))) = (expression (expression ( (expression (expression (primary (identifier (single_identifier (simple_identifier seq))))) > = (expression (primary (number (unsigned_number 16))))) )) ? (expression (primary (number (unsigned_number 16)))) : (expression ( (expression (expression (primary (identifier (single_identifier (simple_identifier seq))))) + (expression (primary (number (unsigned_number 1))))) )))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_state)))) = (expression (expression ( (expression (expression (expression (primary (identifier (single_identifier (simple_identifier seq))))) = = (expression (primary (number (unsigned_number 16))))) & (expression (unary_operator &) (primary (identifier (single_identifier (simple_identifier F_RB_B)))))) )) ? (expression (primary (identifier (single_identifier (simple_identifier STATE_DONE))))) : (expression (primary (identifier (single_identifier (simple_identifier state))))))) ;) (keyword_end end\n))))) (case_item (expression (primary (identifier (single_identifier (simple_identifier STATE_DONE))))) : (statement_or_null (statement (seq_block (keyword_begin  begin\n) (keyword_end end\n))))) (keyword_endcase endcase\n))) (keyword_end end\n)))))))) (module_item (continuous_assign (keyword_assign \nassign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier done)))) = (expression ( (expression (expression (primary (identifier (single_identifier (simple_identifier state))))) = = (expression (primary (identifier (single_identifier (simple_identifier STATE_DONE)))))) )))) ;)) (module_item (always_construct (keyword_always always ) (statement (procedural_timing_control_statement (delay_or_event_control (event_control @ ( (event_expression (keyword_posedge posedge ) (expression (primary (identifier (single_identifier (simple_identifier clk)))))) ))) (statement_or_null (statement (seq_block (keyword_begin  begin\n) (statement (conditional_statement (keyword_if if) ( (expression (unary_operator !) (primary (identifier (single_identifier (simple_identifier en))))) ) (statement_or_null (statement (seq_block (keyword_begin  begin\n) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier state)))) < = (expression (primary (identifier (single_identifier (simple_identifier STATE_INIT)))))) ;) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier seq)))) < = (expression (primary (identifier (single_identifier (simple_identifier SEQ_INIT)))))) ;) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier io)))) < = (expression (primary (identifier (single_identifier (simple_identifier IO_INIT)))))) ;) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier cnt)))) < = (expression (primary (identifier (single_identifier (simple_identifier CNT_INIT)))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier ready)))) = (expression (primary (identifier (single_identifier (simple_identifier READY_INIT)))))) ;) (keyword_end end\n)))) (keyword_else else) (statement_or_null (statement (seq_block (keyword_begin  begin ) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier state)))) < = (expression (primary (identifier (single_identifier (simple_identifier next_state)))))) ;) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier seq)))) < = (expression (primary (identifier (single_identifier (simple_identifier next_seq)))))) ;) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier io)))) < = (expression (primary (identifier (single_identifier (simple_identifier next_io)))))) ;) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier cnt)))) < = (expression (primary (identifier (single_identifier (simple_identifier next_cnt)))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier ready)))) = (expression (primary (identifier (single_identifier (simple_identifier next_ready)))))) ;) (keyword_end end\n)))))) (keyword_end end\n)))))))) (keyword_endmodule \nendmodule ))) (description (module_declaration (module_keyword (keyword_module module )) (identifier (single_identifier (simple_identifier NFC))) (list_of_ports ( (port (port_expression (port_reference (identifier (single_identifier (simple_identifier clk)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier rst)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier done)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier F_IO_A)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier F_CLE_A)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier F_ALE_A)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier F_REN_A)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier F_WEN_A)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier F_RB_A)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier F_IO_B)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier F_CLE_B)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier F_ALE_B)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier F_REN_B)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier F_WEN_B)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier F_RB_B)))))) )) ; (module_item (module_item_declaration (input_declaration (keyword_input input ) (list_of_port_identifiers (identifier (single_identifier (simple_identifier clk)))) ;))) (module_item (module_item_declaration (input_declaration (keyword_input input ) (list_of_port_identifiers (identifier (single_identifier (simple_identifier rst)))) ;))) (module_item (module_item_declaration (output_declaration (keyword_output output ) (list_of_port_identifiers (identifier (single_identifier (simple_identifier done)))) ;))) (module_item (module_item_declaration (inout_declaration (keyword_inout inout ) (range [ (constant_expression (constant_primary (number (unsigned_number 7)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_port_identifiers (identifier (single_identifier (simple_identifier F_IO_A)))) ;))) (module_item (module_item_declaration (output_declaration (keyword_output output ) (list_of_port_identifiers (identifier (single_identifier (simple_identifier F_CLE_A)))) ;))) (module_item (module_item_declaration (output_declaration (keyword_output output ) (list_of_port_identifiers (identifier (single_identifier (simple_identifier F_ALE_A)))) ;))) (module_item (module_item_declaration (output_declaration (keyword_output output ) (list_of_port_identifiers (identifier (single_identifier (simple_identifier F_REN_A)))) ;))) (module_item (module_item_declaration (output_declaration (keyword_output output ) (list_of_port_identifiers (identifier (single_identifier (simple_identifier F_WEN_A)))) ;))) (module_item (module_item_declaration (input_declaration (keyword_input input ) (list_of_port_identifiers (identifier (single_identifier (simple_identifier F_RB_A)))) ;))) (module_item (module_item_declaration (inout_declaration (keyword_inout inout ) (range [ (constant_expression (constant_primary (number (unsigned_number 7)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_port_identifiers (identifier (single_identifier (simple_identifier F_IO_B)))) ;))) (module_item (module_item_declaration (output_declaration (keyword_output output ) (list_of_port_identifiers (identifier (single_identifier (simple_identifier F_CLE_B)))) ;))) (module_item (module_item_declaration (output_declaration (keyword_output output ) (list_of_port_identifiers (identifier (single_identifier (simple_identifier F_ALE_B)))) ;))) (module_item (module_item_declaration (output_declaration (keyword_output output ) (list_of_port_identifiers (identifier (single_identifier (simple_identifier F_REN_B)))) ;))) (module_item (module_item_declaration (output_declaration (keyword_output output ) (list_of_port_identifiers (identifier (single_identifier (simple_identifier F_WEN_B)))) ;))) (module_item (module_item_declaration (input_declaration (keyword_input input ) (list_of_port_identifiers (identifier (single_identifier (simple_identifier F_RB_B)))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire wire )) (list_of_net_identifiers (identifier (single_identifier (simple_identifier en)))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire \nwire )) (range [ (constant_expression (constant_primary (number (unsigned_number 8)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_net_identifiers (identifier (single_identifier (simple_identifier addr)))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire \nwire )) (list_of_net_identifiers (identifier (single_identifier (simple_identifier fcw_ready)))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire \nwire )) (list_of_net_identifiers (identifier (single_identifier (simple_identifier fcr_ready)))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire \nwire )) (list_of_net_identifiers (identifier (single_identifier (simple_identifier fcr_data_valid)))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire \nwire )) (range [ (constant_expression (constant_primary (number (unsigned_number 7)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_net_identifiers (identifier (single_identifier (simple_identifier fcr_data_out)))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire \nwire )) (list_of_net_identifiers (identifier (single_identifier (simple_identifier fcr_done)))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire \nwire )) (list_of_net_identifiers (identifier (single_identifier (simple_identifier fcw_done)))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg reg ) (range [ (constant_expression (constant_primary (number (unsigned_number 8)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier reg_addr))))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg \nreg ) (range [ (constant_expression (constant_primary (number (unsigned_number 8)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier next_reg_addr))))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg reg ) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier reg_done))))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg \nreg ) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier next_reg_done))))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg reg ) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier reg_en))))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg \nreg ) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier next_reg_en))))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg reg ) (range [ (constant_expression (constant_primary (number (unsigned_number 2)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier state))))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg \nreg ) (range [ (constant_expression (constant_primary (number (unsigned_number 2)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier next_state))))) ;))) (module_item (module_item_declaration (parameter_declaration (keyword_parameter parameter ) (list_of_param_assignments (param_assignment (identifier (single_identifier (simple_identifier STATE_INIT))) = (expression (primary (number (binary_number 3'b000))))) , (param_assignment (identifier (single_identifier (simple_identifier STATE_ADDR))) = (expression (expression (primary (identifier (single_identifier (simple_identifier STATE_INIT))))) + (expression (primary (number (unsigned_number 1)))))) , (param_assignment (identifier (single_identifier (simple_identifier STATE_ENABLE))) = (expression (expression (primary (identifier (single_identifier (simple_identifier STATE_ADDR))))) + (expression (primary (number (unsigned_number 1)))))) , (param_assignment (identifier (single_identifier (simple_identifier STATE_ADDR_INCR))) = (expression (expression (primary (identifier (single_identifier (simple_identifier STATE_ENABLE))))) + (expression (primary (number (unsigned_number 1)))))) , (param_assignment (identifier (single_identifier (simple_identifier STATE_DONE))) = (expression (expression (primary (identifier (single_identifier (simple_identifier STATE_ADDR_INCR))))) + (expression (primary (number (unsigned_number 1))))))) ;))) (module_item (module_item_declaration (parameter_declaration (keyword_parameter parameter ) (list_of_param_assignments (param_assignment (identifier (single_identifier (simple_identifier ADDR_INIT))) = (expression (primary (number (heximal_number 8'h0))))) , (param_assignment (identifier (single_identifier (simple_identifier DONE_INIT))) = (expression (primary (number (binary_number 1'b0))))) , (param_assignment (identifier (single_identifier (simple_identifier EN_INIT))) = (expression (primary (number (binary_number 1'b0)))))) ;))) (module_item (continuous_assign (keyword_assign assign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier done)))) = (expression (primary (identifier (single_identifier (simple_identifier reg_done))))))) ;)) (module_item (always_construct (keyword_always always ) (statement (procedural_timing_control_statement (delay_or_event_control (event_control @ ( * ))) (statement_or_null (statement (seq_block (keyword_begin  begin\n) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_reg_done)))) = (expression (primary (identifier (single_identifier (simple_identifier reg_done)))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_reg_addr)))) = (expression (primary (identifier (single_identifier (simple_identifier reg_addr)))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_reg_en)))) = (expression (primary (identifier (single_identifier (simple_identifier reg_en)))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_state)))) = (expression (primary (identifier (single_identifier (simple_identifier state)))))) ;) (statement (case_statement (keyword_case case ) ( (expression (primary (identifier (single_identifier (simple_identifier state))))) ) (case_item (expression (primary (identifier (single_identifier (simple_identifier STATE_INIT))))) : (statement_or_null (statement (seq_block (keyword_begin  begin\n) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_reg_addr)))) = (expression (primary (identifier (single_identifier (simple_identifier ADDR_INIT)))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_reg_done)))) = (expression (primary (identifier (single_identifier (simple_identifier DONE_INIT)))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_reg_en)))) = (expression (primary (identifier (single_identifier (simple_identifier EN_INIT)))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_state)))) = (expression (primary (identifier (single_identifier (simple_identifier STATE_ADDR)))))) ;) (keyword_end end\n))))) (case_item (expression (primary (identifier (single_identifier (simple_identifier STATE_ADDR))))) : (statement_or_null (statement (seq_block (keyword_begin  begin\n) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_state)))) = (expression (primary (identifier (single_identifier (simple_identifier STATE_ENABLE)))))) ;) (keyword_end end\n))))) (case_item (expression (primary (identifier (single_identifier (simple_identifier STATE_ENABLE))))) : (statement_or_null (statement (seq_block (keyword_begin  begin\n) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_reg_en)))) = (expression (primary (number (binary_number 1'b1))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_state)))) = (expression (expression ( (expression (expression (primary (identifier (single_identifier (simple_identifier fcr_done))))) & (expression (unary_operator &) (primary (identifier (single_identifier (simple_identifier fcw_done)))))) )) ? (expression (primary (identifier (single_identifier (simple_identifier STATE_ADDR_INCR))))) : (expression (primary (identifier (single_identifier (simple_identifier STATE_ENABLE))))))) ;) (keyword_end end\n))))) (case_item (expression (primary (identifier (single_identifier (simple_identifier STATE_ADDR_INCR))))) : (statement_or_null (statement (seq_block (keyword_begin  begin\n) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_reg_en)))) = (expression (primary (number (binary_number 1'b0))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_reg_addr)))) = (expression (expression (primary (identifier (single_identifier (simple_identifier reg_addr))))) + (expression (primary (number (unsigned_number 1)))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_state)))) = (expression (expression ( (expression (expression (primary (identifier (single_identifier (simple_identifier reg_addr))))) = = (expression (primary (number (unsigned_number 511))))) )) ? (expression (primary (identifier (single_identifier (simple_identifier STATE_DONE))))) : (expression (primary (identifier (single_identifier (simple_identifier STATE_ADDR))))))) ;) (keyword_end end\n))))) (case_item (expression (primary (identifier (single_identifier (simple_identifier STATE_DONE))))) : (statement_or_null (statement (seq_block (keyword_begin  begin\n) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_reg_done)))) = (expression (primary (number (binary_number 1'b1))))) ;) (keyword_end end\n))))) (keyword_endcase endcase\n))) (keyword_end end\n)))))))) (module_item (always_construct (keyword_always \nalways ) (statement (procedural_timing_control_statement (delay_or_event_control (event_control @ ( (event_expression (keyword_posedge posedge ) (expression (primary (identifier (single_identifier (simple_identifier clk)))))) ))) (statement_or_null (statement (seq_block (keyword_begin  begin\n) (statement (conditional_statement (keyword_if if) ( (expression (primary (identifier (single_identifier (simple_identifier rst))))) ) (statement_or_null (statement (seq_block (keyword_begin  begin\n) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier reg_done)))) < = (expression (primary (identifier (single_identifier (simple_identifier DONE_INIT)))))) ;) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier reg_addr)))) < = (expression (primary (identifier (single_identifier (simple_identifier ADDR_INIT)))))) ;) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier reg_en)))) < = (expression (primary (identifier (single_identifier (simple_identifier EN_INIT)))))) ;) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier state)))) < = (expression (primary (identifier (single_identifier (simple_identifier STATE_INIT)))))) ;) (keyword_end end\n)))) (keyword_else else) (statement_or_null (statement (seq_block (keyword_begin  begin\n) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier reg_done)))) < = (expression (primary (identifier (single_identifier (simple_identifier next_reg_done)))))) ;) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier reg_addr)))) < = (expression (primary (identifier (single_identifier (simple_identifier next_reg_addr)))))) ;) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier reg_en)))) < = (expression (primary (identifier (single_identifier (simple_identifier next_reg_en)))))) ;) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier state)))) < = (expression (primary (identifier (single_identifier (simple_identifier next_state)))))) ;) (keyword_end end )))))) (keyword_end end\n)))))))) (module_item (continuous_assign (keyword_assign \nassign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier en)))) = (expression (primary (identifier (single_identifier (simple_identifier reg_en))))))) ;)) (module_item (continuous_assign (keyword_assign \nassign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier addr)))) = (expression (primary (identifier (single_identifier (simple_identifier reg_addr))))))) ;)) (module_item (module_instantiation (identifier (single_identifier (simple_identifier FCR))) (module_instance (name_of_instance (identifier (single_identifier (simple_identifier fcr)))) ( (list_of_module_connections (named_port_connection . (identifier (single_identifier (simple_identifier clk))) ( (expression (primary (identifier (single_identifier (simple_identifier clk))))) )) , (named_port_connection . (identifier (single_identifier (simple_identifier en))) ( (expression (primary (identifier (single_identifier (simple_identifier en))))) )) , (named_port_connection . (identifier (single_identifier (simple_identifier addr))) ( (expression (primary (identifier (single_identifier (simple_identifier addr))))) )) , (named_port_connection . (identifier (single_identifier (simple_identifier write_ready))) ( (expression (primary (identifier (single_identifier (simple_identifier fcw_ready))))) )) , (named_port_connection . (identifier (single_identifier (simple_identifier ready))) ( (expression (primary (identifier (single_identifier (simple_identifier fcr_ready))))) )) , (named_port_connection . (identifier (single_identifier (simple_identifier data_valid))) ( (expression (primary (identifier (single_identifier (simple_identifier fcr_data_valid))))) )) , (named_port_connection . (identifier (single_identifier (simple_identifier data_out))) ( (expression (primary (identifier (single_identifier (simple_identifier fcr_data_out))))) )) , (named_port_connection . (identifier (single_identifier (simple_identifier done))) ( (expression (primary (identifier (single_identifier (simple_identifier fcr_done))))) )) , (named_port_connection . (identifier (single_identifier (simple_identifier F_IO_A))) ( (expression (primary (identifier (single_identifier (simple_identifier F_IO_A))))) )) , (named_port_connection . (identifier (single_identifier (simple_identifier F_CLE_A))) ( (expression (primary (identifier (single_identifier (simple_identifier F_CLE_A))))) )) , (named_port_connection . (identifier (single_identifier (simple_identifier F_ALE_A))) ( (expression (primary (identifier (single_identifier (simple_identifier F_ALE_A))))) )) , (named_port_connection . (identifier (single_identifier (simple_identifier F_REN_A))) ( (expression (primary (identifier (single_identifier (simple_identifier F_REN_A))))) )) , (named_port_connection . (identifier (single_identifier (simple_identifier F_WEN_A))) ( (expression (primary (identifier (single_identifier (simple_identifier F_WEN_A))))) )) , (named_port_connection . (identifier (single_identifier (simple_identifier F_RB_A))) ( (expression (primary (identifier (single_identifier (simple_identifier F_RB_A))))) ))) )) ;)) (module_item (module_instantiation (identifier (single_identifier (simple_identifier FCW))) (module_instance (name_of_instance (identifier (single_identifier (simple_identifier fcw)))) ( (list_of_module_connections (named_port_connection . (identifier (single_identifier (simple_identifier clk))) ( (expression (primary (identifier (single_identifier (simple_identifier clk))))) )) , (named_port_connection . (identifier (single_identifier (simple_identifier en))) ( (expression (primary (identifier (single_identifier (simple_identifier en))))) )) , (named_port_connection . (identifier (single_identifier (simple_identifier addr))) ( (expression (primary (identifier (single_identifier (simple_identifier addr))))) )) , (named_port_connection . (identifier (single_identifier (simple_identifier read_ready))) ( (expression (primary (identifier (single_identifier (simple_identifier fcr_ready))))) )) , (named_port_connection . (identifier (single_identifier (simple_identifier data))) ( (expression (primary (identifier (single_identifier (simple_identifier fcr_data_out))))) )) , (named_port_connection . (identifier (single_identifier (simple_identifier ready))) ( (expression (primary (identifier (single_identifier (simple_identifier fcw_ready))))) )) , (named_port_connection . (identifier (single_identifier (simple_identifier done))) ( (expression (primary (identifier (single_identifier (simple_identifier fcw_done))))) )) , (named_port_connection . (identifier (single_identifier (simple_identifier F_IO_B))) ( (expression (primary (identifier (single_identifier (simple_identifier F_IO_B))))) )) , (named_port_connection . (identifier (single_identifier (simple_identifier F_CLE_B))) ( (expression (primary (identifier (single_identifier (simple_identifier F_CLE_B))))) )) , (named_port_connection . (identifier (single_identifier (simple_identifier F_ALE_B))) ( (expression (primary (identifier (single_identifier (simple_identifier F_ALE_B))))) )) , (named_port_connection . (identifier (single_identifier (simple_identifier F_REN_B))) ( (expression (primary (identifier (single_identifier (simple_identifier F_REN_B))))) )) , (named_port_connection . (identifier (single_identifier (simple_identifier F_WEN_B))) ( (expression (primary (identifier (single_identifier (simple_identifier F_WEN_B))))) )) , (named_port_connection . (identifier (single_identifier (simple_identifier F_RB_B))) ( (expression (primary (identifier (single_identifier (simple_identifier F_RB_B))))) ))) )) ;)) (keyword_endmodule endmodule\n)))))
