(init (module_declaration (module_keyword (keyword_module module )) (identifier (single_identifier (simple_identifier multiplexor1))) (list_of_ports ( (port (port_expression (port_reference (identifier (single_identifier (simple_identifier in1)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier in2)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier out1)))))) )) ; (module_item (module_item_declaration (input_declaration (keyword_input input ) (range [ (constant_expression (constant_primary (number (unsigned_number 7)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_port_identifiers (identifier (single_identifier (simple_identifier in1)))) ;))) (module_item (module_item_declaration (input_declaration (keyword_input \ninput ) (range [ (constant_expression (constant_primary (number (unsigned_number 2)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_port_identifiers (identifier (single_identifier (simple_identifier in2)))) ;))) (module_item (module_item_declaration (output_declaration (keyword_output output ) (list_of_port_identifiers (identifier (single_identifier (simple_identifier out1)))) ;))) (module_item (always_construct (keyword_always always ) (statement (procedural_timing_control_statement (delay_or_event_control (event_control @ ( (event_expression (event_expression (expression (primary (identifier (single_identifier (simple_identifier in1)))))) (keyword_or  or ) (event_expression (expression (primary (identifier (single_identifier (simple_identifier in2))))))) ))) (statement_or_null (statement (case_statement (keyword_case case ) ( (expression (primary (identifier (single_identifier (simple_identifier in2))))) ) (case_item (expression (primary (number (binary_number 3'b000)))) : (statement_or_null (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier out1)))) = (expression (primary (identifier (single_identifier (simple_identifier in1))) [ (expression (primary (number (unsigned_number 0)))) ]))) ;))) (case_item (expression (primary (number (binary_number 3'b001)))) : (statement_or_null (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier out1)))) = (expression (primary (identifier (single_identifier (simple_identifier in1))) [ (expression (primary (number (unsigned_number 1)))) ]))) ;))) (case_item (expression (primary (number (binary_number 3'b010)))) : (statement_or_null (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier out1)))) = (expression (primary (identifier (single_identifier (simple_identifier in1))) [ (expression (primary (number (unsigned_number 2)))) ]))) ;))) (case_item (expression (primary (number (binary_number 3'b011)))) : (statement_or_null (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier out1)))) = (expression (primary (identifier (single_identifier (simple_identifier in1))) [ (expression (primary (number (unsigned_number 3)))) ]))) ;))) (case_item (expression (primary (number (binary_number 3'b100)))) : (statement_or_null (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier out1)))) = (expression (primary (identifier (single_identifier (simple_identifier in1))) [ (expression (primary (number (unsigned_number 4)))) ]))) ;))) (case_item (expression (primary (number (binary_number 3'b101)))) : (statement_or_null (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier out1)))) = (expression (primary (identifier (single_identifier (simple_identifier in1))) [ (expression (primary (number (unsigned_number 5)))) ]))) ;))) (case_item (expression (primary (number (binary_number 3'b110)))) : (statement_or_null (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier out1)))) = (expression (primary (identifier (single_identifier (simple_identifier in1))) [ (expression (primary (number (unsigned_number 6)))) ]))) ;))) (case_item (expression (primary (number (binary_number 3'b111)))) : (statement_or_null (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier out1)))) = (expression (primary (identifier (single_identifier (simple_identifier in1))) [ (expression (primary (number (unsigned_number 7)))) ]))) ;))) (keyword_endcase endcase\n)))))))) (keyword_endmodule \nendmodule\n)))
