(init (module_item (always_construct (keyword_always always ) (statement (procedural_timing_control_statement (delay_or_event_control (event_control @ ( (event_expression (keyword_posedge posedge ) (expression (primary (identifier (single_identifier (simple_identifier clk)))))) ))) (statement_or_null (statement (seq_block (keyword_begin  begin\n) (statement (conditional_statement (keyword_if if) ( (expression (primary (identifier (single_identifier (simple_identifier reset))))) ) (statement_or_null (statement (seq_block (keyword_begin  begin\n) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier state)))) < = (expression (primary (identifier (single_identifier (simple_identifier STATE_INIT)))))) ;) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier reg_i)))) < = (expression (primary (identifier (single_identifier (simple_identifier REG_I_DEFAULT)))))) ;) (keyword_end end\n)))) (keyword_else else) (statement_or_null (statement (seq_block (keyword_begin  begin\n) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier state)))) < = (expression (primary (identifier (single_identifier (simple_identifier next_state)))))) ;) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier reg_i)))) < = (expression (primary (identifier (single_identifier (simple_identifier next_reg_i)))))) ;) (keyword_end end\n)))))) (keyword_end end\n)))))))))
