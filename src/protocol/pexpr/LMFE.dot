digraph Protocol {
   rankdir = TD;
   node [ shape = circle, color = lightblue, fontname = "Helvetica"];
   State0 [label="S0"]
   State1 [label="S1"]
   State2 [label="S2"]
   State3 [label="S3"]
   State0 -> Edge1;
   Edge1 -> State0;
   Edge1 [shape=record, color=red, height=.08, fontsize=11, label="(! (reset))|"]

   State0 -> Edge0;
   Edge0 -> State1;
   Edge0 [shape=record, color=red, height=.08, fontsize=11, label="(reset)|"]

   State1 -> Edge2;
   Edge2 -> State1;
   Edge2 [shape=record, color=red, height=.08, fontsize=11, label="(reset)|"]

   State1 -> Edge3;
   Edge3 -> State2;
   Edge3 [shape=record, color=red, height=.08, fontsize=11, label="(! (reset))|"]

   State2 -> Edge4;
   Edge4 -> State1;
   Edge4 [shape=record, color=red, height=.08, fontsize=11, label="(reset)|"]

   State2 -> Edge6;
   Edge6 -> State2;
   Edge6 [shape=record, color=red, height=.08, fontsize=11, label="((! (reset)) && (! (busy)))|(if ((in_en)) (read (Din) ))(if ((out_valid)) (write (Dout) ))"]

   State2 -> Edge5;
   Edge5 -> State3;
   Edge5 [shape=record, color=red, height=.08, fontsize=11, label="((busy) && (! (reset)))|(if ((in_en)) (read (Din) ))(if ((out_valid)) (write (Dout) ))"]

   State3 -> Edge8;
   Edge8 -> State2;
   Edge8 [shape=record, color=red, height=.08, fontsize=11, label="(! (busy))|(check ((! (in_en))) )(if ((out_valid)) (write (Dout) ))"]

   State3 -> Edge7;
   Edge7 -> State3;
   Edge7 [shape=record, color=red, height=.08, fontsize=11, label="(busy)|(check ((! (in_en))) )(if ((out_valid)) (write (Dout) ))"]


}
