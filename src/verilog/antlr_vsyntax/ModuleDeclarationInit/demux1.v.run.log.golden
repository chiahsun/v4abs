(init (module_declaration (module_keyword (keyword_module module )) (identifier (single_identifier (simple_identifier decode1))) (list_of_ports ( (port (port_expression (port_reference (identifier (single_identifier (simple_identifier in1)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier sel)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier out1)))))) )) ; (module_item (module_item_declaration (input_declaration (keyword_input input ) (range [ (constant_expression (constant_primary (number (unsigned_number 1)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_port_identifiers (identifier (single_identifier (simple_identifier in1)))) ;))) (module_item (module_item_declaration (input_declaration (keyword_input \ninput ) (range [ (constant_expression (constant_primary (number (unsigned_number 2)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_port_identifiers (identifier (single_identifier (simple_identifier sel)))) ;))) (module_item (module_item_declaration (output_declaration (keyword_output \noutput ) (range [ (constant_expression (constant_primary (number (unsigned_number 13)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_port_identifiers (identifier (single_identifier (simple_identifier out1)))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg reg ) (range [ (constant_expression (constant_primary (number (unsigned_number 15)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier out1))))) ;))) (module_item (module_item_declaration (integer_declaration (keyword_integer integer ) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier i))))) ;))) (module_item (always_construct (keyword_always always ) (statement (procedural_timing_control_statement (delay_or_event_control (event_control @ ( (event_expression (event_expression (expression (primary (identifier (single_identifier (simple_identifier in1)))))) (keyword_or  or ) (event_expression (expression (primary (identifier (single_identifier (simple_identifier sel))))))) ))) (statement_or_null (statement (seq_block (keyword_begin  begin\n) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier out2)))) = (expression (primary (number (heximal_number 14'h0))))) ;) (statement (loop_statement (keyword_for for ) ( (reg_assignment (reg_lvalue (identifier (single_identifier (simple_identifier i)))) = (expression (primary (number (unsigned_number 0))))) ; (expression (expression (primary (identifier (single_identifier (simple_identifier i))))) < = (expression (primary (number (unsigned_number 7))))) ; (reg_assignment (reg_lvalue (identifier (single_identifier (simple_identifier i)))) = (expression (expression (primary (identifier (single_identifier (simple_identifier i))))) + (expression (primary (number (unsigned_number 1)))))) ) (statement (conditional_statement (keyword_if if) ( (expression (expression (primary (identifier (single_identifier (simple_identifier i))))) = = (expression (primary (identifier (single_identifier (simple_identifier sel)))))) ) (statement_or_null (statement (seq_block (keyword_begin  begin\n) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier out1))) [ (expression (primary (identifier (single_identifier (simple_identifier i))))) ]) = (expression (primary (identifier (single_identifier (simple_identifier in1))) [ (expression (primary (number (unsigned_number 0)))) ]))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier out1))) [ (expression (expression (primary (identifier (single_identifier (simple_identifier i))))) + (expression (primary (number (unsigned_number 1))))) ]) = (expression (primary (identifier (single_identifier (simple_identifier in1))) [ (expression (primary (number (unsigned_number 1)))) ]))) ;) (keyword_end end\n)))))))) (keyword_end end\n)))))))) (keyword_endmodule \nendmodule\n)))
