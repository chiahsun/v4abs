(init (module_item (initial_construct (keyword_initial initial ) (statement (seq_block (keyword_begin begin\n) (statement (loop_statement (keyword_for for ) ( (reg_assignment (reg_lvalue (identifier (single_identifier (simple_identifier i)))) = (expression (primary (number (unsigned_number 0))))) ; (expression (expression (primary (identifier (single_identifier (simple_identifier i))))) < (expression (primary (number (unsigned_number 16))))) ; (reg_assignment (reg_lvalue (identifier (single_identifier (simple_identifier i)))) = (expression (expression (primary (identifier (single_identifier (simple_identifier i))))) + (expression (primary (number (unsigned_number 1)))))) ) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier A))) [ (expression (primary (identifier (single_identifier (simple_identifier i))))) ]) = (expression (primary (number (unsigned_number 0))))) ;))) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier A))) [ (expression (primary (number (unsigned_number 0)))) ]) = (expression (primary (number (unsigned_number 20))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier A))) [ (expression (primary (number (unsigned_number 1)))) ]) = (expression (unary_operator -) (primary (number (unsigned_number 13))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier A))) [ (expression (primary (number (unsigned_number 3)))) ]) = (expression (unary_operator -) (primary (number (unsigned_number 1))))) ;) (keyword_end \nend\n))))))
