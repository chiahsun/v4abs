(init (source_text (description (module_declaration (module_keyword (keyword_module \nmodule )) (identifier (single_identifier (simple_identifier sub))) (list_of_ports ( (port (port_expression (port_reference (identifier (single_identifier (simple_identifier pclP)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier pclN1)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier pclN2)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier selN)))))) )) ; (module_item (module_item_declaration (input_declaration (keyword_input input ) (range [ (constant_expression (constant_primary (number (unsigned_number 24)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_port_identifiers (identifier (single_identifier (simple_identifier pclP)))) ;))) (module_item (module_item_declaration (output_declaration (keyword_output output ) (range [ (constant_expression (constant_primary (number (unsigned_number 16)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_port_identifiers (identifier (single_identifier (simple_identifier pclN1)))) ;))) (module_item (module_item_declaration (output_declaration (keyword_output \noutput ) (range [ (constant_expression (constant_primary (number (unsigned_number 15)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_port_identifiers (identifier (single_identifier (simple_identifier pclN2)))) ;))) (module_item (module_item_declaration (output_declaration (keyword_output \noutput ) (range [ (constant_expression (constant_primary (number (unsigned_number 2)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_port_identifiers (identifier (single_identifier (simple_identifier selN)))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire wire )) (range [ (constant_expression (constant_primary (number (unsigned_number 16)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_net_identifiers (identifier (single_identifier (simple_identifier pclN1)))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire \nwire )) (range [ (constant_expression (constant_primary (number (unsigned_number 15)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_net_identifiers (identifier (single_identifier (simple_identifier pclN2)))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire \nwire )) (range [ (constant_expression (constant_primary (number (unsigned_number 8)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_net_identifiers (identifier (single_identifier (simple_identifier diff)))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire \nwire )) (range [ (constant_expression (constant_primary (number (unsigned_number 2)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_net_identifiers (identifier (single_identifier (simple_identifier selN)))) ;))) (module_item (continuous_assign (keyword_assign assign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier diff)))) = (expression (expression (primary (concatenation { (expression (primary (number (binary_number 1'b0)))) , (expression (primary (identifier (single_identifier (simple_identifier pclP))) [ (expression (primary (number (unsigned_number 24)))) : (expression (primary (number (unsigned_number 17)))) ])) }))) - (expression (primary (concatenation { (expression (primary (number (binary_number 1'b0)))) , (expression (primary (identifier (single_identifier (simple_identifier pclP))) [ (expression (primary (number (unsigned_number 16)))) : (expression (primary (number (unsigned_number 9)))) ])) })))))) ;)) (module_item (continuous_assign (keyword_assign \nassign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier pclN1)))) = (expression (primary (concatenation { (expression (primary (identifier (single_identifier (simple_identifier diff))) [ (expression (primary (number (unsigned_number 7)))) : (expression (primary (number (unsigned_number 0)))) ])) , (expression (primary (identifier (single_identifier (simple_identifier pclP))) [ (expression (primary (number (unsigned_number 8)))) : (expression (primary (number (unsigned_number 0)))) ])) }))))) ;)) (module_item (continuous_assign (keyword_assign \nassign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier pclN2)))) = (expression (primary (concatenation { (expression (primary (identifier (single_identifier (simple_identifier diff))) [ (expression (primary (number (unsigned_number 7)))) : (expression (primary (number (unsigned_number 0)))) ])) , (expression (primary (identifier (single_identifier (simple_identifier pclP))) [ (expression (primary (number (unsigned_number 8)))) : (expression (primary (number (unsigned_number 1)))) ])) }))))) ;)) (module_item (continuous_assign (keyword_assign \nassign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier selN)))) = (expression (expression ( (expression (primary (identifier (single_identifier (simple_identifier diff))) [ (expression (primary (number (unsigned_number 8)))) ])) )) ? (expression (primary (number (binary_number 3'b001)))) : (expression ( (expression (expression ( (expression (primary (identifier (single_identifier (simple_identifier pclP))) [ (expression (primary (number (unsigned_number 0)))) ])) )) ? (expression (primary (number (binary_number 3'b010)))) : (expression (primary (number (binary_number 3'b100))))) ))))) ;)) (keyword_endmodule endmodule\n))) (description (module_declaration (module_keyword (keyword_module \nmodule )) (identifier (single_identifier (simple_identifier neg))) (list_of_ports ( (port (port_expression (port_reference (identifier (single_identifier (simple_identifier pclP)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier pclN)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier selN)))))) )) ; (module_item (module_item_declaration (input_declaration (keyword_input input ) (range [ (constant_expression (constant_primary (number (unsigned_number 16)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_port_identifiers (identifier (single_identifier (simple_identifier pclP)))) ;))) (module_item (module_item_declaration (output_declaration (keyword_output output ) (range [ (constant_expression (constant_primary (number (unsigned_number 15)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_port_identifiers (identifier (single_identifier (simple_identifier pclN)))) ;))) (module_item (module_item_declaration (output_declaration (keyword_output \noutput ) (range [ (constant_expression (constant_primary (number (unsigned_number 1)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_port_identifiers (identifier (single_identifier (simple_identifier selN)))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire wire )) (range [ (constant_expression (constant_primary (number (unsigned_number 15)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_net_identifiers (identifier (single_identifier (simple_identifier pclN)))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire \nwire )) (range [ (constant_expression (constant_primary (number (unsigned_number 1)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_net_identifiers (identifier (single_identifier (simple_identifier selN)))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire \nwire )) (range [ (constant_expression (constant_primary (number (unsigned_number 7)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_net_identifiers (identifier (single_identifier (simple_identifier abs)))) ;))) (module_item (continuous_assign (keyword_assign assign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier abs)))) = (expression (expression (primary (number (binary_number 8'b0)))) - (expression (primary (identifier (single_identifier (simple_identifier pclP))) [ (expression (primary (number (unsigned_number 16)))) : (expression (primary (number (unsigned_number 9)))) ]))))) ;)) (module_item (continuous_assign (keyword_assign \nassign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier pclN)))) = (expression (primary (concatenation { (expression (primary (identifier (single_identifier (simple_identifier abs))))) , (expression (primary (identifier (single_identifier (simple_identifier pclP))) [ (expression (primary (number (unsigned_number 8)))) : (expression (primary (number (unsigned_number 1)))) ])) }))))) ;)) (module_item (continuous_assign (keyword_assign \nassign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier selN)))) = (expression (expression ( (expression (primary (identifier (single_identifier (simple_identifier pclP))) [ (expression (primary (number (unsigned_number 16)))) ])) )) ? (expression ( (expression (expression ( (expression (primary (identifier (single_identifier (simple_identifier pclP))) [ (expression (primary (number (unsigned_number 0)))) ])) )) ? (expression (primary (number (binary_number 2'b01)))) : (expression (primary (number (binary_number 2'b10))))) )) : (expression (primary (number (binary_number 2'b0))))))) ;)) (keyword_endmodule endmodule\n))) (description (module_declaration (module_keyword (keyword_module \nmodule )) (identifier (single_identifier (simple_identifier mul))) (list_of_ports ( (port (port_expression (port_reference (identifier (single_identifier (simple_identifier pclP1)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier pclP2)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier stateIn)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier stateOut)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier pclN1)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier pclN2)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier done)))))) )) ; (module_item (module_item_declaration (input_declaration (keyword_input input ) (range [ (constant_expression (constant_primary (number (unsigned_number 15)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_port_identifiers (identifier (single_identifier (simple_identifier pclP1)))) ;))) (module_item (module_item_declaration (input_declaration (keyword_input \ninput ) (range [ (constant_expression (constant_primary (number (unsigned_number 7)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_port_identifiers (identifier (single_identifier (simple_identifier pclP2)))) ;))) (module_item (module_item_declaration (input_declaration (keyword_input \ninput ) (range [ (constant_expression (constant_primary (number (unsigned_number 2)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_port_identifiers (identifier (single_identifier (simple_identifier stateIn)))) ;))) (module_item (module_item_declaration (output_declaration (keyword_output output ) (range [ (constant_expression (constant_primary (number (unsigned_number 2)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_port_identifiers (identifier (single_identifier (simple_identifier stateOut)))) ;))) (module_item (module_item_declaration (output_declaration (keyword_output \noutput ) (range [ (constant_expression (constant_primary (number (unsigned_number 7)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_port_identifiers (identifier (single_identifier (simple_identifier pclN1)))) ;))) (module_item (module_item_declaration (output_declaration (keyword_output \noutput ) (range [ (constant_expression (constant_primary (number (unsigned_number 7)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_port_identifiers (identifier (single_identifier (simple_identifier pclN2)))) ;))) (module_item (module_item_declaration (output_declaration (keyword_output \noutput ) (list_of_port_identifiers (identifier (single_identifier (simple_identifier done)))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg reg ) (range [ (constant_expression (constant_primary (number (unsigned_number 2)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier stateOut))))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg \nreg ) (range [ (constant_expression (constant_primary (number (unsigned_number 7)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier pclN1))))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg \nreg ) (range [ (constant_expression (constant_primary (number (unsigned_number 7)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier pclN2))))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg \nreg ) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier done))))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire wire )) (range [ (constant_expression (constant_primary (number (unsigned_number 3)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_net_identifiers (identifier (single_identifier (simple_identifier a)))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire \nwire )) (range [ (constant_expression (constant_primary (number (unsigned_number 3)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_net_identifiers (identifier (single_identifier (simple_identifier b)))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire \nwire )) (range [ (constant_expression (constant_primary (number (unsigned_number 3)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_net_identifiers (identifier (single_identifier (simple_identifier c)))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire \nwire )) (range [ (constant_expression (constant_primary (number (unsigned_number 3)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_net_identifiers (identifier (single_identifier (simple_identifier d)))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire \nwire )) (range [ (constant_expression (constant_primary (number (unsigned_number 7)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_net_identifiers (identifier (single_identifier (simple_identifier a_mult_d)))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire \nwire )) (range [ (constant_expression (constant_primary (number (unsigned_number 7)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_net_identifiers (identifier (single_identifier (simple_identifier a_mult_c)))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire \nwire )) (range [ (constant_expression (constant_primary (number (unsigned_number 7)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_net_identifiers (identifier (single_identifier (simple_identifier b_mult_c)))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire \nwire )) (range [ (constant_expression (constant_primary (number (unsigned_number 7)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_net_identifiers (identifier (single_identifier (simple_identifier a_mult_d_high)))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire \nwire )) (range [ (constant_expression (constant_primary (number (unsigned_number 7)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_net_identifiers (identifier (single_identifier (simple_identifier b_mult_c_high)))) ;))) (module_item (continuous_assign (keyword_assign assign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier a)))) = (expression (primary (identifier (single_identifier (simple_identifier pclP1))) [ (expression (primary (number (unsigned_number 11)))) : (expression (primary (number (unsigned_number 8)))) ])))) ;)) (module_item (continuous_assign (keyword_assign \nassign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier b)))) = (expression (primary (identifier (single_identifier (simple_identifier pclP1))) [ (expression (primary (number (unsigned_number 15)))) : (expression (primary (number (unsigned_number 12)))) ])))) ;)) (module_item (continuous_assign (keyword_assign \nassign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier c)))) = (expression (primary (identifier (single_identifier (simple_identifier pclP1))) [ (expression (primary (number (unsigned_number 3)))) : (expression (primary (number (unsigned_number 0)))) ])))) ;)) (module_item (continuous_assign (keyword_assign \nassign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier d)))) = (expression (primary (identifier (single_identifier (simple_identifier pclP1))) [ (expression (primary (number (unsigned_number 7)))) : (expression (primary (number (unsigned_number 4)))) ])))) ;)) (module_item (continuous_assign (keyword_assign assign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier a_mult_d)))) = (expression (expression (primary (concatenation { (expression (primary (number (binary_number 4'b0)))) , (expression (primary (identifier (single_identifier (simple_identifier a))))) }))) * (expression (primary (concatenation { (expression (primary (number (binary_number 4'b0)))) , (expression (primary (identifier (single_identifier (simple_identifier d))))) })))))) ;)) (module_item (continuous_assign (keyword_assign \nassign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier a_mult_c)))) = (expression (expression (primary (concatenation { (expression (primary (number (binary_number 4'b0)))) , (expression (primary (identifier (single_identifier (simple_identifier a))))) }))) * (expression (primary (concatenation { (expression (primary (number (binary_number 4'b0)))) , (expression (primary (identifier (single_identifier (simple_identifier c))))) })))))) ;)) (module_item (continuous_assign (keyword_assign \nassign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier b_mult_c)))) = (expression (expression (primary (concatenation { (expression (primary (number (binary_number 4'b0)))) , (expression (primary (identifier (single_identifier (simple_identifier b))))) }))) * (expression (primary (concatenation { (expression (primary (number (binary_number 4'b0)))) , (expression (primary (identifier (single_identifier (simple_identifier c))))) })))))) ;)) (module_item (continuous_assign (keyword_assign \nassign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier a_mult_d_high)))) = (expression (primary (concatenation { (expression (primary (identifier (single_identifier (simple_identifier a_mult_d))) [ (expression (primary (number (unsigned_number 3)))) : (expression (primary (number (unsigned_number 0)))) ])) , (expression (primary (number (binary_number 4'b0)))) }))))) ;)) (module_item (continuous_assign (keyword_assign \nassign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier b_mult_c_high)))) = (expression (primary (concatenation { (expression (primary (identifier (single_identifier (simple_identifier b_mult_c))) [ (expression (primary (number (unsigned_number 3)))) : (expression (primary (number (unsigned_number 0)))) ])) , (expression (primary (number (binary_number 4'b0)))) }))))) ;)) (module_item (always_construct (keyword_always always ) (statement (procedural_timing_control_statement (delay_or_event_control (event_control @ ( * ))) (statement_or_null (statement (seq_block (keyword_begin  begin\n) (statement (case_statement (keyword_case case ) ( (expression (primary (identifier (single_identifier (simple_identifier stateIn))))) ) (case_item (expression (primary (number (binary_number 3'b000)))) : (statement_or_null (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier stateOut)))) = (expression (expression ( (expression (expression (primary (identifier (single_identifier (simple_identifier a))))) = = (expression (primary (number (heximal_number 4'h0))))) )) ? (expression (primary (number (binary_number 3'b001)))) : (expression (primary (number (binary_number 3'b010)))))) ;))) (case_item (expression (primary (number (binary_number 3'b001)))) : (statement_or_null (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier stateOut)))) = (expression (expression ( (expression (expression (primary (identifier (single_identifier (simple_identifier b))))) = = (expression (primary (number (heximal_number 4'h0))))) )) ? (expression (primary (number (binary_number 3'b111)))) : (expression (primary (number (binary_number 3'b111)))))) ;))) (case_item (expression (primary (number (binary_number 3'b010)))) : (statement_or_null (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier stateOut)))) = (expression (expression ( (expression (expression (primary (identifier (single_identifier (simple_identifier b))))) = = (expression (primary (number (heximal_number 4'h0))))) )) ? (expression (primary (number (binary_number 3'b011)))) : (expression (primary (number (binary_number 3'b100)))))) ;))) (case_item (expression (primary (number (binary_number 3'b011)))) : (statement_or_null (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier stateOut)))) = (expression (primary (number (binary_number 3'b111))))) ;))) (case_item (expression (primary (number (binary_number 3'b100)))) : (statement_or_null (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier stateOut)))) = (expression (expression ( (expression (expression (primary (identifier (single_identifier (simple_identifier d))))) = = (expression (primary (number (heximal_number 4'h0))))) )) ? (expression (primary (number (binary_number 3'b111)))) : (expression (primary (number (binary_number 3'b110)))))) ;))) (case_item (expression (primary (number (binary_number 3'b110)))) : (statement_or_null (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier stateOut)))) = (expression (primary (number (binary_number 3'b111))))) ;))) (case_item (expression (primary (number (binary_number 3'b111)))) : (statement_or_null (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier stateOut)))) = (expression (primary (number (binary_number 3'b000))))) ;))) (case_item (expression (primary (identifier (single_identifier (simple_identifier default))))) : (statement_or_null (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier stateOut)))) = (expression (primary (number (binary_number 3'b111))))) ;))) (keyword_endcase endcase\n))) (keyword_end end\n)))))))) (module_item (always_construct (keyword_always \nalways ) (statement (procedural_timing_control_statement (delay_or_event_control (event_control @ ( * ))) (statement_or_null (statement (seq_block (keyword_begin  begin\n) (statement (case_statement (keyword_case case ) ( (expression (primary (identifier (single_identifier (simple_identifier stateIn))))) ) (case_item (expression (primary (number (binary_number 3'b111)))) : (statement_or_null (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier pclN1)))) = (expression (primary (identifier (single_identifier (simple_identifier pclP2)))))) ;))) (case_item (expression (primary (identifier (single_identifier (simple_identifier default))))) : (statement_or_null (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier pclN1)))) = (expression (primary (number (heximal_number 8'h0))))) ;))) (keyword_endcase endcase\n))) (keyword_end end\n)))))))) (module_item (always_construct (keyword_always \nalways ) (statement (procedural_timing_control_statement (delay_or_event_control (event_control @ ( * ))) (statement_or_null (statement (seq_block (keyword_begin  begin\n) (statement (case_statement (keyword_case case ) ( (expression (primary (identifier (single_identifier (simple_identifier stateIn))))) ) (case_item (expression (primary (number (binary_number 3'b000)))) : (statement_or_null (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier pclN2)))) = (expression (expression ( (expression (expression (primary (identifier (single_identifier (simple_identifier a))))) = = (expression (primary (number (heximal_number 4'h0))))) )) ? (expression (primary (identifier (single_identifier (simple_identifier b_mult_c))))) : (expression (primary (identifier (single_identifier (simple_identifier a_mult_c))))))) ;))) (case_item (expression (primary (number (binary_number 3'b001)))) : (statement_or_null (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier pclN2)))) = (expression (expression ( (expression (expression (primary (identifier (single_identifier (simple_identifier b))))) = = (expression (primary (number (heximal_number 4'h0))))) )) ? (expression (primary (number (heximal_number 8'h0)))) : (expression (primary (identifier (single_identifier (simple_identifier pclP2))))))) ;))) (case_item (expression (primary (number (binary_number 3'b010)))) : (statement_or_null (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier pclN2)))) = (expression (expression ( (expression (expression ( (expression (expression (primary (identifier (single_identifier (simple_identifier b))))) = = (expression (primary (number (heximal_number 4'h0))))) )) ? (expression (primary (identifier (single_identifier (simple_identifier a_mult_d_high))))) : (expression (primary (identifier (single_identifier (simple_identifier b_mult_c_high)))))) )) + (expression (primary (identifier (single_identifier (simple_identifier pclP2))))))) ;))) (case_item (expression (primary (number (binary_number 3'b011)))) : (statement_or_null (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier pclN2)))) = (expression (primary (identifier (single_identifier (simple_identifier pclP2)))))) ;))) (case_item (expression (primary (number (binary_number 3'b100)))) : (statement_or_null (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier pclN2)))) = (expression (expression ( (expression (expression ( (expression (expression (primary (identifier (single_identifier (simple_identifier d))))) = = (expression (primary (number (heximal_number 4'h0))))) )) ? (expression (primary (number (heximal_number 8'h0)))) : (expression (primary (identifier (single_identifier (simple_identifier a_mult_d_high)))))) )) + (expression (primary (identifier (single_identifier (simple_identifier pclP2))))))) ;))) (case_item (expression (primary (number (binary_number 3'b110)))) : (statement_or_null (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier pclN2)))) = (expression (primary (identifier (single_identifier (simple_identifier pclP2)))))) ;))) (case_item (expression (primary (identifier (single_identifier (simple_identifier default))))) : (statement_or_null (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier pclN2)))) = (expression (primary (number (heximal_number 8'h0))))) ;))) (keyword_endcase endcase\n))) (keyword_end end\n)))))))) (module_item (always_construct (keyword_always \nalways ) (statement (procedural_timing_control_statement (delay_or_event_control (event_control @ ( * ))) (statement_or_null (statement (seq_block (keyword_begin  begin\n) (statement (case_statement (keyword_case case ) ( (expression (primary (identifier (single_identifier (simple_identifier stateIn))))) ) (case_item (expression (primary (number (binary_number 3'b111)))) : (statement_or_null (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier done)))) = (expression (primary (number (binary_number 1'b1))))) ;))) (case_item (expression (primary (identifier (single_identifier (simple_identifier default))))) : (statement_or_null (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier done)))) = (expression (primary (number (binary_number 1'b0))))) ;))) (keyword_endcase endcase\n))) (keyword_end end\n)))))))) (keyword_endmodule \nendmodule\n))) (description (module_declaration (module_keyword (keyword_module \nmodule )) (identifier (single_identifier (simple_identifier add))) (list_of_ports ( (port (port_expression (port_reference (identifier (single_identifier (simple_identifier pclP)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier pclN)))))) )) ; (module_item (module_item_declaration (input_declaration (keyword_input input ) (range [ (constant_expression (constant_primary (number (unsigned_number 15)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_port_identifiers (identifier (single_identifier (simple_identifier pclP)))) ;))) (module_item (module_item_declaration (output_declaration (keyword_output \noutput ) (range [ (constant_expression (constant_primary (number (unsigned_number 7)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_port_identifiers (identifier (single_identifier (simple_identifier pclN)))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire wire )) (range [ (constant_expression (constant_primary (number (unsigned_number 7)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_net_identifiers (identifier (single_identifier (simple_identifier pclN)))) ;))) (module_item (continuous_assign (keyword_assign \nassign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier pclN)))) = (expression (expression (primary (identifier (single_identifier (simple_identifier pclP))) [ (expression (primary (number (unsigned_number 15)))) : (expression (primary (number (unsigned_number 8)))) ])) + (expression (primary (identifier (single_identifier (simple_identifier pclP))) [ (expression (primary (number (unsigned_number 7)))) : (expression (primary (number (unsigned_number 0)))) ]))))) ;)) (keyword_endmodule endmodule\n))) (description (module_declaration (module_keyword (keyword_module \nmodule )) (identifier (single_identifier (simple_identifier top))) (list_of_ports ( (port (port_expression (port_reference (identifier (single_identifier (simple_identifier clk)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier rst)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier i)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier j)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier k)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier operation)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier vo)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier in_valid)))))) , (port (port_expression (port_reference (identifier (single_identifier (simple_identifier out_valid)))))) )) ; (module_item (module_item_declaration (input_declaration (keyword_input input ) (list_of_port_identifiers (identifier (single_identifier (simple_identifier clk)))) ;))) (module_item (module_item_declaration (input_declaration (keyword_input \ninput ) (list_of_port_identifiers (identifier (single_identifier (simple_identifier rst)))) ;))) (module_item (module_item_declaration (input_declaration (keyword_input \ninput ) (range [ (constant_expression (constant_primary (number (unsigned_number 7)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_port_identifiers (identifier (single_identifier (simple_identifier i)))) ;))) (module_item (module_item_declaration (input_declaration (keyword_input \ninput ) (range [ (constant_expression (constant_primary (number (unsigned_number 7)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_port_identifiers (identifier (single_identifier (simple_identifier j)))) ;))) (module_item (module_item_declaration (input_declaration (keyword_input \ninput ) (range [ (constant_expression (constant_primary (number (unsigned_number 7)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_port_identifiers (identifier (single_identifier (simple_identifier k)))) ;))) (module_item (module_item_declaration (input_declaration (keyword_input \ninput ) (list_of_port_identifiers (identifier (single_identifier (simple_identifier operation)))) ;))) (module_item (module_item_declaration (output_declaration (keyword_output \noutput ) (range [ (constant_expression (constant_primary (number (unsigned_number 7)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_port_identifiers (identifier (single_identifier (simple_identifier vo)))) ;))) (module_item (module_item_declaration (output_declaration (keyword_output \noutput ) (list_of_port_identifiers (identifier (single_identifier (simple_identifier in_valid)))) ;))) (module_item (module_item_declaration (output_declaration (keyword_output \noutput ) (list_of_port_identifiers (identifier (single_identifier (simple_identifier out_valid)))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg \nreg ) (range [ (constant_expression (constant_primary (number (unsigned_number 24)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier next_rSub))))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg \nreg ) (range [ (constant_expression (constant_primary (number (unsigned_number 16)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier next_rNeg))))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg \nreg ) (range [ (constant_expression (constant_primary (number (unsigned_number 15)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier next_rAdd))))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg \nreg ) (range [ (constant_expression (constant_primary (number (unsigned_number 15)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier next_rMul1))))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg \nreg ) (range [ (constant_expression (constant_primary (number (unsigned_number 7)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier next_rMul2))))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg \nreg ) (range [ (constant_expression (constant_primary (number (unsigned_number 2)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier next_stateIn))))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg \nreg ) (range [ (constant_expression (constant_primary (number (unsigned_number 24)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier rSub))))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire \nwire )) (range [ (constant_expression (constant_primary (number (unsigned_number 16)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_net_identifiers (identifier (single_identifier (simple_identifier sub_out1)))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire \nwire )) (range [ (constant_expression (constant_primary (number (unsigned_number 15)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_net_identifiers (identifier (single_identifier (simple_identifier sub_out2)))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire \nwire )) (range [ (constant_expression (constant_primary (number (unsigned_number 2)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_net_identifiers (identifier (single_identifier (simple_identifier sub_sel)))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg \nreg ) (range [ (constant_expression (constant_primary (number (unsigned_number 16)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier rNeg))))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire \nwire )) (range [ (constant_expression (constant_primary (number (unsigned_number 15)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_net_identifiers (identifier (single_identifier (simple_identifier neg_out)))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire \nwire )) (range [ (constant_expression (constant_primary (number (unsigned_number 1)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_net_identifiers (identifier (single_identifier (simple_identifier neg_sel)))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg \nreg ) (range [ (constant_expression (constant_primary (number (unsigned_number 15)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier rAdd))))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire \nwire )) (range [ (constant_expression (constant_primary (number (unsigned_number 7)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_net_identifiers (identifier (single_identifier (simple_identifier out_Add)))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg \nreg ) (range [ (constant_expression (constant_primary (number (unsigned_number 15)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier rMul1))))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg \nreg ) (range [ (constant_expression (constant_primary (number (unsigned_number 7)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier rMul2))))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg \nreg ) (range [ (constant_expression (constant_primary (number (unsigned_number 2)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier stateIn))))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire \nwire )) (range [ (constant_expression (constant_primary (number (unsigned_number 2)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_net_identifiers (identifier (single_identifier (simple_identifier stateOut)))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire \nwire )) (range [ (constant_expression (constant_primary (number (unsigned_number 7)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_net_identifiers (identifier (single_identifier (simple_identifier out_Mul)))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire \nwire )) (range [ (constant_expression (constant_primary (number (unsigned_number 7)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_net_identifiers (identifier (single_identifier (simple_identifier mul_out2)))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire \nwire )) (list_of_net_identifiers (identifier (single_identifier (simple_identifier done)))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg \nreg ) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier op_Add))))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg \nreg ) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier op_Mul))))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg \nreg ) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier next_op_Add))))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg \nreg ) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier next_op_Mul))))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire \nwire )) (list_of_net_identifiers (identifier (single_identifier (simple_identifier stall_Add)))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire \nwire )) (list_of_net_identifiers (identifier (single_identifier (simple_identifier stall_Mul)))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg \nreg ) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier in_valid))))) ;))) (module_item (module_item_declaration (net_declaration (net_type (keyword_wire \nwire )) (list_of_net_identifiers (identifier (single_identifier (simple_identifier out_valid)))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg reg ) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier c_done))))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg \nreg ) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier next_c_done))))) ;))) (module_item (module_item_declaration (reg_declaration (keyword_reg reg ) (range [ (constant_expression (constant_primary (number (unsigned_number 7)))) : (constant_expression (constant_primary (number (unsigned_number 0)))) ]) (list_of_register_identifiers (register_name (identifier (single_identifier (simple_identifier vo))))) ;))) (module_item (continuous_assign (keyword_assign assign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier stall_Mul)))) = (expression ( (expression (expression (expression (primary (identifier (single_identifier (simple_identifier sub_sel))))) = = (expression (primary (number (binary_number 3'b100))))) & (expression (expression (unary_operator &) (primary (identifier (single_identifier (simple_identifier neg_sel))))) ! = (expression (primary (number (binary_number 2'b0)))))) )))) ;)) (module_item (continuous_assign (keyword_assign \nassign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier stall_Add)))) = (expression ( (expression (expression (expression (primary (identifier (single_identifier (simple_identifier sub_sel))))) = = (expression (primary (number (binary_number 3'b010))))) & (expression (expression (unary_operator &) (primary (identifier (single_identifier (simple_identifier neg_sel))))) ! = (expression (primary (number (binary_number 2'b0)))))) )))) ;)) (module_item (continuous_assign (keyword_assign \nassign ) (list_of_net_assignments (net_assignment (net_lvalue (identifier (single_identifier (simple_identifier out_valid)))) = (expression (expression ( (expression (expression (expression (primary (identifier (single_identifier (simple_identifier op_Add))))) & (expression (unary_operator &) (primary (identifier (single_identifier (simple_identifier done)))))) & & (expression (unary_operator !) (primary (identifier (single_identifier (simple_identifier c_done)))))) )) | (expression (unary_operator |) (primary (identifier (single_identifier (simple_identifier c_done)))))))) ;)) (module_item (module_instantiation (identifier (single_identifier (simple_identifier sub))) (module_instance (name_of_instance (identifier (single_identifier (simple_identifier sub_inst0)))) ( (list_of_module_connections (named_port_connection . (identifier (single_identifier (simple_identifier pclP))) ( (expression (primary (identifier (single_identifier (simple_identifier rSub))))) )) , (named_port_connection . (identifier (single_identifier (simple_identifier pclN1))) ( (expression (primary (identifier (single_identifier (simple_identifier sub_out1))))) )) , (named_port_connection . (identifier (single_identifier (simple_identifier pclN2))) ( (expression (primary (identifier (single_identifier (simple_identifier sub_out2))))) )) , (named_port_connection . (identifier (single_identifier (simple_identifier selN))) ( (expression (primary (identifier (single_identifier (simple_identifier sub_sel))))) ))) )) ;)) (module_item (module_instantiation (identifier (single_identifier (simple_identifier neg))) (module_instance (name_of_instance (identifier (single_identifier (simple_identifier neg_inst1)))) ( (list_of_module_connections (named_port_connection . (identifier (single_identifier (simple_identifier pclP))) ( (expression (primary (identifier (single_identifier (simple_identifier rNeg))))) )) , (named_port_connection . (identifier (single_identifier (simple_identifier pclN))) ( (expression (primary (identifier (single_identifier (simple_identifier neg_out))))) )) , (named_port_connection . (identifier (single_identifier (simple_identifier selN))) ( (expression (primary (identifier (single_identifier (simple_identifier neg_sel))))) ))) )) ;)) (module_item (module_instantiation (identifier (single_identifier (simple_identifier add))) (module_instance (name_of_instance (identifier (single_identifier (simple_identifier add_inst2)))) ( (list_of_module_connections (named_port_connection . (identifier (single_identifier (simple_identifier pclP))) ( (expression (primary (identifier (single_identifier (simple_identifier rAdd))))) )) , (named_port_connection . (identifier (single_identifier (simple_identifier pclN))) ( (expression (primary (identifier (single_identifier (simple_identifier out_Add))))) ))) )) ;)) (module_item (module_instantiation (identifier (single_identifier (simple_identifier mul))) (module_instance (name_of_instance (identifier (single_identifier (simple_identifier mul_inst2)))) ( (list_of_module_connections (named_port_connection . (identifier (single_identifier (simple_identifier pclP1))) ( (expression (primary (identifier (single_identifier (simple_identifier rMul1))))) )) , (named_port_connection . (identifier (single_identifier (simple_identifier pclP2))) ( (expression (primary (identifier (single_identifier (simple_identifier rMul2))))) )) , (named_port_connection . (identifier (single_identifier (simple_identifier stateIn))) ( (expression (primary (identifier (single_identifier (simple_identifier stateIn))))) )) , (named_port_connection . (identifier (single_identifier (simple_identifier stateOut))) ( (expression (primary (identifier (single_identifier (simple_identifier stateOut))))) )) , (named_port_connection . (identifier (single_identifier (simple_identifier pclN1))) ( (expression (primary (identifier (single_identifier (simple_identifier out_Mul))))) )) , (named_port_connection . (identifier (single_identifier (simple_identifier pclN2))) ( (expression (primary (identifier (single_identifier (simple_identifier mul_out2))))) )) , (named_port_connection . (identifier (single_identifier (simple_identifier done))) ( (expression (primary (identifier (single_identifier (simple_identifier done))))) ))) )) ;)) (module_item (always_construct (keyword_always always ) (statement (procedural_timing_control_statement (delay_or_event_control (event_control @ ( * ))) (statement_or_null (statement (seq_block (keyword_begin  begin\n) (statement (conditional_statement (keyword_if if) ( (expression (primary (identifier (single_identifier (simple_identifier rst))))) ) (statement_or_null (statement (seq_block (keyword_begin  begin\n) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_op_Add)))) = (expression (primary (number (binary_number 1'b0))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_op_Mul)))) = (expression (primary (number (binary_number 1'b0))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier in_valid)))) = (expression (primary (number (binary_number 1'b1))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_rSub)))) = (expression (primary (number (binary_number 25'b1))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_rNeg)))) = (expression (primary (number (binary_number 17'b0))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_rAdd)))) = (expression (primary (number (binary_number 16'b0))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_rMul1)))) = (expression (primary (number (binary_number 16'b0))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_rMul2)))) = (expression (primary (number (binary_number 8'b0))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_stateIn)))) = (expression (primary (number (binary_number 3'b111))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier vo)))) = (expression (primary (number (heximal_number 8'h0))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_c_done)))) = (expression (primary (number (binary_number 1'b0))))) ;) (keyword_end end\n)))) (keyword_else else) (statement_or_null (statement (seq_block (keyword_begin  begin\n) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_op_Add)))) = (expression (expression ( (expression (primary (identifier (single_identifier (simple_identifier stall_Add))))) )) ? (expression (primary (identifier (single_identifier (simple_identifier neg_sel))) [ (expression (primary (number (unsigned_number 0)))) ])) : (expression ( (expression (expression (primary (identifier (single_identifier (simple_identifier sub_sel))) [ (expression (primary (number (unsigned_number 1)))) ])) | (expression (unary_operator |) (primary (identifier (single_identifier (simple_identifier neg_sel))) [ (expression (primary (number (unsigned_number 0)))) ]))) )))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_op_Mul)))) = (expression (expression ( (expression (primary (identifier (single_identifier (simple_identifier stall_Mul))))) )) ? (expression (primary (identifier (single_identifier (simple_identifier neg_sel))) [ (expression (primary (number (unsigned_number 1)))) ])) : (expression ( (expression (expression (primary (identifier (single_identifier (simple_identifier sub_sel))) [ (expression (primary (number (unsigned_number 2)))) ])) | (expression (unary_operator |) (primary (identifier (single_identifier (simple_identifier neg_sel))) [ (expression (primary (number (unsigned_number 1)))) ]))) )))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier in_valid)))) = (expression (expression ( (expression (unary_operator !) (primary (identifier (single_identifier (simple_identifier done))))) )) ? (expression (primary (number (binary_number 1'b0)))) : (expression ( (expression (expression (unary_operator !) (primary (identifier (single_identifier (simple_identifier stall_Mul))))) & & (expression (unary_operator !) (primary (identifier (single_identifier (simple_identifier stall_Add)))))) )))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_rSub)))) = (expression (expression ( (expression (unary_operator !) (primary (identifier (single_identifier (simple_identifier in_valid))))) )) ? (expression (primary (identifier (single_identifier (simple_identifier rSub))))) : (expression (primary (concatenation { (expression (primary (identifier (single_identifier (simple_identifier i))))) , (expression (primary (identifier (single_identifier (simple_identifier j))))) , (expression (primary (identifier (single_identifier (simple_identifier k))))) , (expression (primary (identifier (single_identifier (simple_identifier operation))))) }))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_rNeg)))) = (expression (expression ( (expression (unary_operator !) (primary (identifier (single_identifier (simple_identifier done))))) )) ? (expression (primary (identifier (single_identifier (simple_identifier rNeg))))) : (expression (primary (identifier (single_identifier (simple_identifier sub_out1))))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_rAdd)))) = (expression (expression (expression (expression ( (expression (unary_operator !) (primary (identifier (single_identifier (simple_identifier done))))) )) ? (expression (primary (identifier (single_identifier (simple_identifier rAdd))))) : (expression ( (expression (unary_operator !) (primary (identifier (single_identifier (simple_identifier next_op_Add))))) ))) ? (expression (primary (number (heximal_number 16'h0)))) : (expression ( (expression (expression (primary (identifier (single_identifier (simple_identifier neg_sel))))) = = (expression (primary (number (binary_number 2'b0))))) ))) ? (expression (primary (identifier (single_identifier (simple_identifier sub_out2))))) : (expression (primary (identifier (single_identifier (simple_identifier neg_out))))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_rMul1)))) = (expression (expression (expression (expression ( (expression (unary_operator !) (primary (identifier (single_identifier (simple_identifier done))))) )) ? (expression (primary (identifier (single_identifier (simple_identifier rMul1))))) : (expression ( (expression (unary_operator !) (primary (identifier (single_identifier (simple_identifier next_op_Mul))))) ))) ? (expression (primary (number (heximal_number 16'h0)))) : (expression ( (expression (expression (primary (identifier (single_identifier (simple_identifier neg_sel))))) = = (expression (primary (number (binary_number 2'b0))))) ))) ? (expression (primary (identifier (single_identifier (simple_identifier sub_out2))))) : (expression (primary (identifier (single_identifier (simple_identifier neg_out))))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_rMul2)))) = (expression (expression ( (expression (primary (identifier (single_identifier (simple_identifier done))))) )) ? (expression (primary (identifier (single_identifier (simple_identifier rMul2))))) : (expression (primary (identifier (single_identifier (simple_identifier mul_out2))))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_stateIn)))) = (expression (expression ( (expression (expression (expression (primary (identifier (single_identifier (simple_identifier done))))) & & (expression (unary_operator !) (primary (identifier (single_identifier (simple_identifier op_Mul)))))) & & (expression (unary_operator !) (primary (identifier (single_identifier (simple_identifier next_op_Mul)))))) )) ? (expression (primary (number (binary_number 3'b111)))) : (expression (primary (identifier (single_identifier (simple_identifier stateOut))))))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier vo)))) = (expression (expression ( (expression (primary (identifier (single_identifier (simple_identifier c_done))))) )) ? (expression (primary (identifier (single_identifier (simple_identifier out_Mul))))) : (expression ( (expression (expression ( (expression (expression (expression (primary (identifier (single_identifier (simple_identifier op_Add))))) & (expression (unary_operator &) (primary (identifier (single_identifier (simple_identifier done)))))) & & (expression (unary_operator !) (primary (identifier (single_identifier (simple_identifier c_done)))))) )) ? (expression (primary (identifier (single_identifier (simple_identifier out_Add))))) : (expression (primary (number (heximal_number 8'h0))))) )))) ;) (statement (blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier next_c_done)))) = (expression (expression ( (expression (expression (primary (identifier (single_identifier (simple_identifier stateOut))))) = = (expression (primary (number (binary_number 3'b111))))) )) ? (expression (primary (number (binary_number 1'b1)))) : (expression (primary (number (binary_number 1'b0)))))) ;) (keyword_end end\n)))))) (keyword_end end\n)))))))) (module_item (always_construct (keyword_always \nalways ) (statement (procedural_timing_control_statement (delay_or_event_control (event_control @ ( (event_expression (keyword_posedge posedge ) (expression (primary (identifier (single_identifier (simple_identifier clk)))))) ))) (statement_or_null (statement (seq_block (keyword_begin  begin\n) (statement (conditional_statement (keyword_if if) ( (expression (primary (identifier (single_identifier (simple_identifier rst))))) ) (statement_or_null (statement (seq_block (keyword_begin  begin\n) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier rSub)))) < = (expression (primary (number (binary_number 25'b1))))) ;) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier rNeg)))) < = (expression (primary (number (binary_number 17'b0))))) ;) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier rAdd)))) < = (expression (primary (number (binary_number 16'b0))))) ;) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier rMul1)))) < = (expression (primary (number (binary_number 16'b0))))) ;) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier rMul2)))) < = (expression (primary (number (binary_number 8'b0))))) ;) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier stateIn)))) < = (expression (primary (number (binary_number 3'b111))))) ;) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier op_Add)))) < = (expression (primary (number (binary_number 1'b0))))) ;) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier op_Mul)))) < = (expression (primary (number (binary_number 1'b0))))) ;) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier c_done)))) < = (expression (primary (number (binary_number 1'b0))))) ;) (keyword_end end\n)))) (keyword_else else) (statement_or_null (statement (seq_block (keyword_begin  begin\n) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier rSub)))) < = (expression (primary (identifier (single_identifier (simple_identifier next_rSub)))))) ;) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier rNeg)))) < = (expression (primary (identifier (single_identifier (simple_identifier next_rNeg)))))) ;) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier rAdd)))) < = (expression (primary (identifier (single_identifier (simple_identifier next_rAdd)))))) ;) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier rMul1)))) < = (expression (primary (identifier (single_identifier (simple_identifier next_rMul1)))))) ;) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier rMul2)))) < = (expression (primary (identifier (single_identifier (simple_identifier next_rMul2)))))) ;) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier stateIn)))) < = (expression (primary (identifier (single_identifier (simple_identifier next_stateIn)))))) ;) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier op_Add)))) < = (expression (primary (identifier (single_identifier (simple_identifier next_op_Add)))))) ;) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier op_Mul)))) < = (expression (primary (identifier (single_identifier (simple_identifier next_op_Mul)))))) ;) (statement (non_blocking_assignment (reg_lvalue (identifier (single_identifier (simple_identifier c_done)))) < = (expression (primary (identifier (single_identifier (simple_identifier next_c_done)))))) ;) (keyword_end end\n)))))) (keyword_end end\n)))))))) (keyword_endmodule \nendmodule\n)))))
